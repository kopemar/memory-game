{"version":3,"sources":["constant/Constants.js","Game.js","context/AppContext.js","component/game/CardView.js","component/game/Playground.js","component/game/PlayerBar.js","component/Button.js","component/FadeIn.js","component/Heading.js","component/WelcomeScreen.js","component/settings/PlayerNumber.js","component/settings/PlayerCount.js","component/settings/PlayerNames.js","component/settings/GameType.js","component/settings/MultiplayerLoad.js","component/Header.js","component/About.js","component/Footer.js","component/Layout.js","util/TimeoutUtil.js","App.js","serviceWorker.js","index.js"],"names":["IMAGES","COLORS","FONT_SIZE","SCREEN","STRING","PATH","HASH","API","STORAGE","REJECT_ANIMATION","css","delay","duration","MultiplayerGame","count","players","activePlayer","i","length","undefined","console","log","this","score","props","game","cards","player","push","Player","fromProps","j","Card","activeCard","discovered","shuffle","error","Game","readGameProps","card","counter","index","Math","floor","random","temp","number","image","active","id","getId","timeout","remainining","valueEquals","isTheSame","hasOwnProperty","0","color","src","1","2","3","4","5","6","7","name","decorate","observable","createContext","setActiveCard","welcome","setWelcome","setPlayers","loaded","setGameLoaded","Container","styled","div","Inner","g","FlipCard","Back","rect","fill","Front","Img","CardView","clickHandler","timeoutHandler","useState","setActive","setDiscovered","setTimeout","onClick","pairsWith","clearTimeout","viewBox","x1","y1","x2","y2","stopColor","offset","patternUnits","width","height","href","x","y","size","rx","PlaygroundContainer","section","Playground","forEach","handleMatch","isWon","alert","handleCardClick","handleTimeout","PlayerField","PlayerName","Indicator","PlayerBar","fields","useReducer","forceUpdate","observe","change","StyledButton","button","disabled","CustomButton","children","type","event","FadeIn","MoveFromRight","Subheading","h2","finished","WelcomeScreen","onFinished","setFinished","Wrapper","enabled","PlayerNumber","value","onSelect","main","shouldMove","Numbers","PlayerCount","setShouldMove","playerCount","setPlayerCount","onSelected","numbers","FormContainer","FormSection","TextField","input","Form","form","Indicators","Circle","circle","IndicatorWrapper","IndicatorsWrapper","cx","cy","r","PlayerForm","state","handleInputChange","bind","target","setState","isLong","onSubmit","e","preventDefault","autoComplete","autocomplete","onChange","placeholder","required","Component","PlayerNames","forms","indicators","filled","GameType","to","MultiplayerLoad","window","localStorage","getItem","JSON","parse","header","SmallLogo","h1","collapsed","BackButton","nav","AboutButton","Header","onBack","back","alt","path","PersonalInfo","ButtonWrapper","About","user","nextProps","nextState","nextContext","axios","get","then","response","data","catch","err","avatar_url","html_url","login","confirm","clear","footer","Footer","Main","Layout","history","basename","getTimeout","_setTimeout","map","callback","Date","now","m","max","NaN","saveMultiplayer","setItem","stringify","isWelcome","App","Multiplayer","initGame","location","hash","shouldFadeIn","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fc0cd3c1.chunk.js","sourcesContent":["import {css} from 'styled-components'\n\nexport const IMAGES = {\n    IMG_1: \"img/img_1.svg\",\n    IMG_2: \"img/img_2.svg\",\n    IMG_3: \"img/img_3.svg\",\n    IMG_4: \"img/img_4.svg\",\n    IMG_5: \"img/img_5.svg\",\n    IMG_6: \"img/img_6.svg\",\n    IMG_7: \"img/img_7.svg\",\n    IMG_8: \"img/img_8.svg\",\n}\n\nexport const COLORS = {\n    WASSERMANN: \"#6AA331\",\n    LIGHT_WASSERMANN: \"#ACD87E\",\n    DARK_WASSERMANN: \"#4a7524\",\n    GREEN_AGAIN: \"#7AB341\",\n    POISON: \"#B8FF2C\",\n    POISONOUS: \"#A0FF4F\",\n    YELLOW_GREEN: \"#D8D365\",\n    ANOTHER_GREEN: \"#B0DD70\",\n    GRAY_BUT_GREEN: \"#9CAF8C\",\n    UGLY_GREEN: \"#B7C59C\",\n    SILLY_GREEN: \"#96E6A1\",\n    GREEN: \"#93D559\",\n    TURQUOISE: \"#1AD7E4\",\n    BARBIE: \"#E41ABB\",\n    VIOLETTE: \"#7C7BC1\",\n    COMMIE: \"#C90000\",\n    DEEP_PURPLE: \"#482666\",\n    JUST_GOLD: \"#FFD100\",\n    MARINE: \"#12407B\",\n    ORANGE: \"#FF6200\",\n    WHITE: \"#FFFFFF\",\n    WHITE_TRANSPARENT: \"rgb(255, 255, 255, 50)\",\n    GRAY: \"#BCBDBC\",\n    LIGHT_BLUE: \"#7AD9EF\",\n    LIGHT_GRAY: \"#D7D7D7\",\n    LIGHT_YELLOW: \"#E7DEB1\",\n    LIGHT_ORANGE: \"#E7C3B1\",\n    LIGHT_BROWN: \"#877467\"\n}\n\nexport const FONT_SIZE = {\n    XLARGE: \"36px\",\n    LARGE: \"24px\"\n}\n\nexport const SCREEN = {\n    ABOVE_TABLET: \"@media (min-width: 1000px)\",\n    BELOW_PHONE: \"@media (max-width: 700px)\"\n}\n\nexport const STRING = {\n    WELCOME_TEXT: \"Hello and welcome to the memory game!\",\n    NUMBER_OF_PLAYERS: \"Select number of players\",\n    NAME_OF_PLAYER: \"Insert name of Player\"\n}\n\nexport const PATH = {\n    MULTIPLAYER: \"/multiplayer\",\n    ABOUT: \"/about\",\n    HOME: \"/\",\n    BASENAME: \"/memory-game\"\n}\n\nexport const HASH = {\n    HOME: `#/`\n}\n\nexport const API = {\n    GITHUB_PATH: \"https://api.github.com/users/kopemar\"\n}\n\nexport const STORAGE = {\n    MULTIPLAYER: \"multiplayer_in_storage\",\n    WELCOME: \"has_been_welcome\",\n}\n\nexport const MAX_PLAYER_COUNT = 4;\nexport const MIN_PLAYER_COUNT = 2;\n\nexport const REJECT_ANIMATION = css`\n            @keyframes reject {\n                0% {transform: translateX(15px);}\n                50% {transform: translateX(-15px);}\n                100% {transform: translateX(0px)}\n            }\n            animation-name: reject;\n            animation-delay: ${({delay}) => delay ? delay : 0}s;\n            animation-duration: ${({duration}) => duration ? duration : 0.5}s;\n            animation-fill-mode: forwards;\n            `","import {COLORS, IMAGES} from \"./constant/Constants\";\nimport {decorate, observable} from \"mobx\";\n\nclass Game {\n    static fromProps(props) {\n        try {\n            const game = new Game(props.cards.length);\n            this.readGameProps(props, game)\n            return game;\n        } catch {\n            throw \"Not a valid JSON game\"\n        }\n    }\n\n    static readGameProps(props, game) {\n        game.cards = [];\n\n        for (const card of props.cards) {\n            card && game.cards.push(Card.fromProps(card));\n        }\n\n        game.activeCard = props.activeCard == null ? null : Card.fromProps(props.activeCard);\n        game.discovered = props.discovered;\n    }\n\n    constructor(count) {\n        console.log(\"Game constructor\")\n        this.count = count;\n        if (count % 2 === 0) {\n            this.cards = [];\n            for (let i = 0; i < count/2; i++) {\n               for (let j = 0; j < 2; j++) {\n                   this.cards.push(new Card(i))\n               }\n            }\n            this.activeCard = null;\n            this.discovered = 0;\n            this.shuffle()\n        } else {\n            console.error(\"Not even number of cards\")\n        }\n        console.log(this)\n    }\n\n    isWon () { return this.count === this.discovered;}\n\n    handleMatch() {\n        console.log(\"Handle match\")\n    }\n\n    shuffle() {\n        let counter = this.cards.length;\n\n        // shuffle algorithm from https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\n        while (counter > 0) {\n            const index = Math.floor(Math.random() * counter);\n\n            counter--;\n            const temp = this.cards[counter];\n            this.cards[counter] = this.cards[index];\n            this.cards[index] = temp;\n        }\n    }\n}\n\nexport class MultiplayerGame extends Game {\n    activePlayer = 0;\n\n    static fromProps(props) {\n        const game = new MultiplayerGame(props.cards.length, []);\n        super.readGameProps(props, game)\n\n        for (const player of props.players) {\n            game.players.push(player === null ? null : Player.fromProps(player))\n        }\n        game.activePlayer = 1;\n        return game;\n    }\n\n    handleMatch() {\n        super.handleMatch();\n        console.log(this)\n        if (this.activePlayer !== null) this.players[this.activePlayer].score += 2;\n    }\n\n    constructor(count, players) {\n        super(count);\n        this.players = players;\n\n        for (let i = 0; i < players.length; i++) {\n            if (players[i] !== undefined) {\n                console.log(players);\n                this.activePlayer = i;\n                console.log(i)\n                break;\n            }\n        }\n    }\n\n}\n\nexport class Card {\n    static fromProps(props) {\n        try {\n            const card = new Card(props.number);\n            card.active = props.active;\n            card.id = props.id;\n            card.discovered = props.discovered;\n            card.remainining = props.remainining;\n            return card;\n        } catch {\n            throw 'Invalid card'\n        }\n    }\n\n    constructor(number) {\n        this.number = number;\n        this.props = Card.image[number];\n        this.active = false;\n        this.id = Card.getId();\n        this.discovered = false;\n        this.timeout = null;\n        this.remainining = 0;\n    }\n\n    isTheSame(card) {\n        return this.valueEquals(card) && this.id === card.id;\n    }\n\n    pairsWith (card) {\n        return this.valueEquals(card) && !this.isTheSame(card);\n    }\n\n    valueEquals (card) {\n        if (card === undefined) return this === undefined;\n        if (card === null) return this === null;\n        if (card.hasOwnProperty(\"number\")) {\n            return card.number === this.number\n        }\n        return false\n    }\n\n    static counter = 0;\n\n    static getId = () => {\n        return Card.counter++;\n    }\n\n    static image = {\n        0: {color: COLORS.SILLY_GREEN, src: IMAGES.IMG_1},\n        1: {color: COLORS.LIGHT_ORANGE, src: IMAGES.IMG_2},\n        2: {color: COLORS.LIGHT_GRAY, src: IMAGES.IMG_3},\n        3: {color: COLORS.LIGHT_BROWN, src: IMAGES.IMG_4},\n        4: {color: COLORS.LIGHT_YELLOW, src: IMAGES.IMG_5},\n        5: {color: COLORS.LIGHT_BLUE, src: IMAGES.IMG_6},\n        6: {color: COLORS.LIGHT_GRAY, src: IMAGES.IMG_7},\n        7: {color: COLORS.LIGHT_YELLOW, src: IMAGES.IMG_8},\n    }\n}\n\nexport class Player {\n    score = 0;\n    static fromProps (props) {\n        try {\n            const player = new Player(props.name);\n            player.score = props.score;\n            return player;\n        } catch {\n            throw 'Invalid player'\n        }\n    }\n\n    constructor(name) {\n        this.name = name;\n    }\n}\n\ndecorate(Player, {\n    score: observable\n})\ndecorate(MultiplayerGame, {\n    activePlayer: observable\n})","import React, {createContext} from 'react';\n\nexport const AppContext = createContext({\n        activeCard: null,\n        setActiveCard: () => {},\n        welcome: false,\n        setWelcome: welcome => welcome,\n        players: [],\n        setPlayers: players => players,\n        loaded: false,\n        setGameLoaded: () => {}\n    }\n)\n","import React, {useContext, useEffect, useState} from 'react';\nimport styled, {css} from 'styled-components';\nimport {COLORS} from \"../../constant/Constants\";\nimport {AppContext} from \"../../context/AppContext\";\n\nconst Container = styled.div`\n    box-sizing: border-box;\n    width: 25%;\n    padding: 10px;\n    border-radius: 10px;\n    perspective: 1000px;\n`;\n\nconst Inner = styled.g`\n    position: relative;\n    fill: transparent;\n    transition: transform 0.6s;\n    transform-style: preserve-3d;\n    text-align: center;\n    ${({active}) => active && css`transform: rotateY(180deg);`}\n`\n\nconst FlipCard = styled.g`\n    perspective: 1000px;\n    position: relative; \n`\n\n\nconst Back = styled.rect`\n    width: 100%;\n    height: 100%;\n    rx: 10;\n    fill: url(${({fill}) => fill});\n    stroke: ${({active}) => active ? COLORS.DARK_WASSERMANN : COLORS.WASSERMANN}; \n    position: absolute;\n    backface-visibility: hidden;\n    \n    &:hover {\n        stroke: ${COLORS.DARK_WASSERMANN}\n    }\n`\n\nconst Front = styled.rect`\n    width: 100%;\n    height: 100%;\n    fill: ${({src}) => src};\n    stroke: ${({active}) => !active ? COLORS.DARK_WASSERMANN : COLORS.WASSERMANN}; \n    position: absolute;\n    backface-visibility: hidden;\n    transform: rotateY(180deg);\n`\n\nconst Img = styled.image`\n    width: 100%;\n    height: 100%;\n    backface-visibility: hidden;\n    transform: rotateY(180deg);\n`\n\nexport const CardView = ({card, clickHandler, timeoutHandler, game}) => {\n    console.log(\"New CardView\", card);\n    const [active, setActive] = useState(card.active);\n    const [discovered, setDiscovered] = useState(card.discovered);\n\n    const getSelector = (id) => {\n        return `#${id}`\n    }\n\n    if (card.remainining > 0) {\n        card.timeout = setTimeout(() => {\n            timeoutHandler(card)\n            if (!discovered) setDiscovered(card.discovered)\n            setActive(card.discovered);\n            console.log(\"=== TIMEOUT ===\")\n        }, card.remainining);\n    }\n\n    const viewBoxSize = 160;\n    const gradientId = \"green_linear_gradient\";\n\n    const handleClick = () => {\n        clickHandler(card)\n        setActive(true);\n        console.log(\"Handle Click\", card)\n\n        if (card.pairsWith(game.activeCard)) {\n            console.log(\"clearing timeout\")\n            clearTimeout(game.activeCard.timeout);\n        }\n\n        card.timeout = setTimeout(() => {\n            timeoutHandler(card)\n            if (!discovered) setDiscovered(card.discovered)\n            setActive(card.discovered);\n            console.log(\"=== TIMEOUT ===\")\n        }, 1500);\n    }\n\n    return (\n        <Container onClick={() => {if (!card.discovered) handleClick()}}>\n            <svg viewBox={`0 0 ${viewBoxSize} ${viewBoxSize}`}>\n                <defs>\n                    <linearGradient x1=\"50%\" y1=\"0%\" x2=\"50%\" y2=\"100%\" id={gradientId}>\n                        <stop stopColor={COLORS.LIGHT_WASSERMANN} offset=\"0%\"/>\n                        <stop stopColor={COLORS.GREEN_AGAIN} offset=\"100%\"/>\n                    </linearGradient>\n\n                    <pattern id=\"img1\" patternUnits=\"userSpaceOnUse\" width=\"100\" height=\"100\">\n                        <image href=\"wall.jpg\" x=\"0\" y=\"0\" width=\"100\" height=\"100\"/>\n                    </pattern>\n                </defs>\n                <FlipCard>\n                    <Inner active={card.isTheSame(game.activeCard) || active || discovered} size={viewBoxSize}>\n                        <Back active={card.isTheSame(game.activeCard) || active || discovered} fill={getSelector(gradientId)} id=\"card_bg_rectangle\" width=\"100%\" height=\"100%\" rx=\"10\"/>\n                        <Front active={card.isTheSame(game.activeCard) || active || discovered} src={card.props.color} width=\"100%\" height=\"100%\" rx=\"10\"/>\n                        <Img href={card.props.src} width=\"100%\" height=\"100%\"/>\n                    </Inner>\n                </FlipCard>\n            </svg>\n        </Container>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {CardView} from \"./CardView\";\nimport {COLORS} from \"../../constant/Constants\";\nimport {MultiplayerGame} from \"../../Game\";\n\nconst PlaygroundContainer = styled.section`\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 700px;\n    padding: 10px;\n    background: ${COLORS.WHITE};\n    border-radius: 4px;\n    border: 1px solid ${COLORS.GRAY_BUT_GREEN};\n    margin: 10px auto;\n`;\n\n\nexport const Playground = ({game}) => {\n    const cards = [];\n\n    game.cards.forEach((card) => {\n        cards.push(<CardView clickHandler={(card) => handleCardClick(card)}\n                             card={card}\n                             game={game}\n                             timeoutHandler={(card) => handleTimeout(card)}/>)\n    })\n\n    const handleTimeout = (card) => {\n        if (!card.discovered) {\n            card.active = false;\n        }\n        game.activeCard = null;\n    }\n\n    function handleCardClick(card) {\n        card.active = true;\n        console.log(game);\n        if (game.activeCard === null) {\n            game.activeCard = card;\n        } else {\n            if (game.activeCard.pairsWith(card)) {\n                if (!card.discovered && !game.activeCard.discovered) game.discovered += 2;\n                game.activeCard.discovered = true;\n                card.discovered = true;\n                game.handleMatch()\n            } else {\n                game.activeCard.active = false;\n                card.active = false;\n            }\n            game.activeCard = null;\n            if (game.isWon()) {\n                setTimeout(() => {\n                    if (game instanceof MultiplayerGame) {\n                        // todo who is the winner? :)\n                        alert(\"Game has ended!\")\n                    } else {\n                        alert(\"You won this game!\")\n                    }\n\n                }, 1000)\n            }\n        }\n    }\n\n    return <PlaygroundContainer>\n        {cards}\n    </PlaygroundContainer>\n};","import React, {useReducer, useState} from 'react';\nimport styled from 'styled-components';\nimport {COLORS, FONT_SIZE, SCREEN} from \"../../constant/Constants\";\nimport {observe} from \"mobx\"\n\nconst Container = styled.div`\n    position: relative;\n    display: flex;\n    background: ${COLORS.WHITE}; \n    min-height: 100px;\n    ${SCREEN.ABOVE_TABLET} {\n        padding: 6px 200px;\n    }\n    ${SCREEN.BELOW_PHONE} {\n        flex-direction: column; \n        padding: 20px;\n    }\n    > * {\n        text-align: center; \n    }\n`;\n\nconst PlayerField = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    text-align: center\n    ${SCREEN.BELOW_PHONE} {\n        position: absolute;\n    }\n`\n\nconst PlayerName = styled.div`\n    height: 0;\n    flex-grow: 1; \n    text-transform: uppercase;\n    padding: 20px;\n    font-size: ${FONT_SIZE.XLARGE};\n    color: ${({active}) => active? COLORS.SILLY_GREEN : COLORS.GRAY};\n    \n    ${SCREEN.BELOW_PHONE} {\n        text-align: left;\n        padding: 5px;\n        font-size: ${FONT_SIZE.LARGE};\n    }\n`\n\nconst Indicator = styled.div`\n    background: ${COLORS.SILLY_GREEN};\n    position: absolute;\n    height: 10px;\n    width: 100%;\n    right: 0;\n    bottom: 0;\n    margin-bottom: 4px;\n`\n\nexport const PlayerBar = ({players}) => {\n    const [activePlayer, setActivePlayer] = useState(players[1]);\n    const fields = [];\n    const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n    for (const player of players) {\n        player !== null && observe(player, \"score\", change => {\n            forceUpdate();\n            console.log(change, players[1]);\n        })\n    }\n\n\n    for (let i = 1; i < players.length; i++) {\n        const player = players[i];\n        player && fields.push(<PlayerField><PlayerName active={player === activePlayer}>{player.name} ({player.score})</PlayerName></PlayerField>)\n    }\n\n    return <Container>\n        {fields}\n        <Indicator/>\n    </Container>\n}","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {COLORS, FONT_SIZE, REJECT_ANIMATION, SCREEN} from \"../constant/Constants\";\n\nconst StyledButton = styled.button`\n    border: none; \n    height: 64px;\n    background-image: linear-gradient(to bottom , ${COLORS.POISON}, ${COLORS.POISONOUS});\n    min-width: 300px;\n    border-radius: 64px;\n    font-size: ${FONT_SIZE.LARGE};\n    color: ${COLORS.WHITE};\n    text-transform: uppercase;\n    font-family: 'Raleway', sans-serif;\n    opacity: 0.5; \n    transition: 1s; \n    cursor: pointer; \n    \n    ${SCREEN.BELOW_PHONE} {\n        min-width: 0;\n        width: 60vw; \n        opacity: 1;\n    }\n    \n    :hover {\n        opacity: 1;\n    }\n    \n    ${({disabled}) => disabled && css`\n        background-image: linear-gradient(to bottom , ${COLORS.GRAY_BUT_GREEN}, ${COLORS.UGLY_GREEN});\n        cursor: not-allowed; \n        \n        &:hover {\n            opacity: 0.5;\n            ${REJECT_ANIMATION}\n        }\n    `}\n`\n\nexport const CustomButton = ({children, onClick, disabled}) => {\n    return <StyledButton disabled={disabled} type=\"submit\" onClick={(event) => {if (!disabled && onClick) onClick(event)}}>{children}</StyledButton>\n}","import styled from \"styled-components\";\n\nexport const FadeIn = styled.div`\n    @keyframes fade-in {\n        from {opacity: 0;}\n        to {opacity: 1;}\n    }\n    animation-name: fade-in;\n    opacity: 0;\n    animation-delay: ${({delay}) => delay ? delay : 0}s;\n    animation-duration: ${({duration}) => duration ? duration : 2}s;\n    animation-fill-mode: forwards;\n`;\n\nexport const MoveFromRight = styled.div`\n    @keyframes move-from-right {\n        from {transform: translateX(100%);}\n        to {transform: translateX(0%);}\n    }\n    animation-name: move-from-right;\n    transform: translateX(100%)\n    animation-delay: ${({delay}) => delay ? delay : 0}s;\n    animation-duration: ${({duration}) => duration ? duration : 2}s;\n    animation-fill-mode: forwards;\n`","import styled from \"styled-components\";\nimport {COLORS, FONT_SIZE, SCREEN} from \"../constant/Constants\";\n\nexport const Subheading = styled.h2`\n    margin: 50px;\n    color: ${COLORS.WHITE}; \n    font-size: ${FONT_SIZE.XLARGE};\n    font-weight: 500;\n    text-align: center;\n    \n    ${SCREEN.BELOW_PHONE} {\n        font-size: ${FONT_SIZE.LARGE};\n    }\n`","import React, {useState} from 'react'\nimport styled, {css} from \"styled-components\";\nimport {STRING} from \"../constant/Constants\";\nimport {CustomButton} from \"./Button\";\nimport {FadeIn} from \"./FadeIn\";\nimport {Subheading} from \"./Heading\";\n\nconst Container = styled.section`\n    max-width: 100%;\n    text-align: center;\n    transition: 1s;\n    \n    ${({finished}) => finished && css`\n        transform: translateX(-100%);\n    `}\n`\n\nexport const WelcomeScreen = ({onFinished}) => {\n    const [finished, setFinished] = useState(false);\n\n    const finish = () => {\n        setFinished(true)\n        onFinished()\n    }\n\n    return <Container finished={finished}>\n        <FadeIn delay={1}>\n            <Subheading>{STRING.WELCOME_TEXT}</Subheading>\n        </FadeIn>\n        <FadeIn delay={2}>\n            <CustomButton onClick={() => finish()}>Next</CustomButton>\n        </FadeIn>\n    </Container>\n}","import React from 'react';\nimport styled, {css} from 'styled-components'\nimport {COLORS, FONT_SIZE} from \"../../constant/Constants\";\n\nconst Wrapper = styled.section`\n    margin: 10px;\n    width: 136px;\n    height: 168px;\n    border-radius: 60px; \n    text-align: center;\n    background: ${COLORS.GRAY_BUT_GREEN};\n    color: ${COLORS.WHITE};\n    font-size: ${FONT_SIZE.XLARGE};\n    \n    &, >p {\n        transition: 2s;\n    }\n    \n    > p {\n        opacity: 0.5;\n        height: 20%;\n        padding: 40%;\n    }\n    \n    &:hover {\n        > p {\n            opacity: 1;\n        }\n        background: ${COLORS.GREEN};\n    }\n    \n    ${({enabled}) => enabled && css`\n        > p {\n            opacity: 1;\n        }\n        background: ${COLORS.GREEN};\n        border: 3px solid ${COLORS.DARK_WASSERMANN}\n    `}\n`;\n\nexport const PlayerNumber = ({value, onSelect, enabled}) => {\n    return <Wrapper onClick={()=> onSelect(value)} enabled={enabled}>\n        <p>{value}</p>\n    </Wrapper>\n}","import React, {useState} from 'react'\nimport styled, {css} from 'styled-components'\nimport {Subheading} from \"../Heading\";\nimport {MAX_PLAYER_COUNT, MIN_PLAYER_COUNT, STRING} from \"../../constant/Constants\";\nimport {PlayerNumber} from \"./PlayerNumber\";\nimport {CustomButton} from \"../Button\";\n\nconst Container = styled.main`\n    transform: translateX(100%);\n    transition: 1s; \n    text-align: center;\n    ${({shouldMove}) => shouldMove && css`\n        transform: translateX(0%);\n    `}\n`;\n\nconst Numbers = styled.div`\n    width: 100%;\n    display: flex;\n    margin: auto;\n    justify-content: center;\n`\n\nexport const PlayerCount = ({onFinished}) => {\n    const [shouldMove, setShouldMove] = useState(false);\n    const [playerCount, setPlayerCount] = useState(0)\n\n    const onSelected = (value) => {\n        setPlayerCount(value);\n    };\n\n    const numbers = [];\n    for (let i = MIN_PLAYER_COUNT; i <= MAX_PLAYER_COUNT; i++) {\n        numbers.push(<PlayerNumber value={i} enabled={playerCount === i} onSelect={(value) => onSelected(value)}/>)\n    }\n\n    setTimeout(() => setShouldMove(true), 100)\n    return <section><Container shouldMove={shouldMove}>\n        <Subheading>{STRING.NUMBER_OF_PLAYERS}</Subheading>\n        <Numbers>\n            {numbers}\n        </Numbers>\n        <CustomButton disabled={playerCount === 0} onClick={()=> {onFinished(playerCount)}}>Next</CustomButton>\n    </Container>\n    </section>\n}","import React, {useState, Component} from 'react'\nimport styled, {css} from 'styled-components';\nimport {Subheading} from \"../Heading\";\nimport {COLORS, FONT_SIZE, SCREEN, STRING} from \"../../constant/Constants\";\nimport {CustomButton} from \"../Button\";\nimport {MoveFromRight} from \"../FadeIn\";\nimport {Player} from \"../../Game\";\n\nconst Container = styled.div`\n    position: relative; \n`\n\nconst FormContainer = styled.div`\n    width: 100vw;\n    \n    ${({active}) => active && css`\n        transform: translateX(-${(active - 1) * 100}%);\n    `}\n    transition: 2s; \n`;\n\nconst FormSection = styled.section`\n    width: 100vw;\n    display: inline-block;\n    position: absolute; \n    \n    ${({number}) => number && css`\n        left: ${(number - 1) * 100}%;\n    `}\n`\n\nconst TextField = styled.input`\n    display: block; \n    margin:  0 auto 64px;    \n    height: 64px;\n    min-width: 300px;\n    border-radius: 64px;\n    letter-spacing: 3px;\n    font-weight: 500;\n    font-size: ${FONT_SIZE.XLARGE};\n    text-align: center;\n    \n    color: ${COLORS.GRAY};\n    padding: 10px;\n    border: 5px solid ${COLORS.WASSERMANN}; \n    transition: 1s;\n    \n    ${SCREEN.BELOW_PHONE} {\n        &::placeholder {\n            font-size: ${FONT_SIZE.LARGE};\n        }\n        min-width: 0;\n        width: 60vw; \n    }\n    \n    &::placeholder {\n        font-weight: 500;\n        opacity: 0.2;\n    }\n    \n    &:invalid {\n        border-color: ${COLORS.UGLY_GREEN};\n    }\n`;\n\nconst Form = styled.form`\n    text-align: center; \n`;\n\nconst Indicators = styled.div`\n    // position: absolute; \n    // right: 50%;\n    // left: 50%; \n    display: flex;\n    align-items: center;\n    text-align: center; \n    justify-content: center;\n`;\n\nconst Circle = styled.circle`\n    fill: ${COLORS.WHITE};\n    transition: 1s;\n    \n    ${({disabled, active}) => {\n    return disabled && !active && css`\n        fill: ${COLORS.UGLY_GREEN}\n    `\n}}\n    \n    ${({active}) => active && css`\n        fill: ${COLORS.POISONOUS}\n    `}\n`\n\nconst IndicatorWrapper = styled.div`\n    margin: 10px;\n`\n\nconst IndicatorsWrapper = styled(MoveFromRight)`\n    width: 100vw;\n    bottom: 0;\n`\n\n\nconst Indicator = ({active, disabled}) => {\n    return <IndicatorWrapper>\n        <svg width=\"22px\" height=\"22px\" viewBox=\"0 0 22 22\">\n            <Circle cx=\"11\" cy=\"11\" r=\"8\" active={active} disabled={disabled}/>\n        </svg>\n    </IndicatorWrapper>\n}\n\nclass PlayerForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: null,\n            number: this.props.number,\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        if (event.target.name === \"name\" && this.state.name != null && event.target.value.length >= 10) {\n            this.setState({isLong: true})\n        } else {\n            this.setState({\n                [event.target.name]: event.target.value\n            });\n        }\n    }\n\n    render() {\n        const {name} = this.state;\n        return (\n            <FormSection number={this.state.number}>\n                <Subheading>{STRING.NAME_OF_PLAYER} {this.props.number}</Subheading>\n                <Form\n                    onSubmit={(e) => {\n                        this.props.onSubmit(this.state);\n                        e.preventDefault()\n                    }}>\n                    <TextField\n                        autoComplete={'off'}\n                        autocomplete=\"off\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this.handleInputChange}\n                        type=\"text\"\n                        placeholder={`Player ${this.props.number} name`}\n                        required/>\n                    <CustomButton disabled={this.state.name === null || this.state.name.length < 1}>Next</CustomButton>\n                </Form>\n            </FormSection>\n        );\n    }\n\n}\n\nexport const PlayerNames = ({count, onFinished}) => {\n    const [active, setActive] = useState(1);\n    const [players] = useState([]);\n    const forms = [];\n    const indicators = [];\n\n    const onSubmit = (value) => {\n        players[value.number] = new Player(value.name);\n        if (value.number < count) setActive(value.number + 1)\n        else if (value.number === count) onFinished && onFinished(players)\n    }\n\n    for (let i = 1; i <= count; i++) {\n        let disabled = players[i] === undefined || players[i].length === 0;\n        indicators.push(\n            <Indicator\n                active={active === i}\n                disabled={disabled}\n            />);\n        forms.push(<PlayerForm filled={i < active} number={i} active={active === i}\n                               onSubmit={(value) => onSubmit(value)}/>)\n    }\n    return <Container>\n        <MoveFromRight>\n            <FormContainer active={active}>\n                {forms}\n            </FormContainer>\n        </MoveFromRight>\n        <IndicatorsWrapper>\n            <Indicators>\n                {indicators}\n            </Indicators>\n        </IndicatorsWrapper>\n    </Container>\n};","import React from 'react';\nimport styled from 'styled-components'\nimport {MoveFromRight} from \"../FadeIn\";\nimport {Subheading} from \"../Heading\";\nimport {CustomButton} from \"../Button\";\nimport {PATH, SCREEN} from \"../../constant/Constants\";\nimport {Link} from \"react-router-dom\";\n\nconst Container = styled(MoveFromRight)`\n    text-align: center; \n    \n    > button {\n        margin: auto 30px;\n       \n        ${SCREEN.BELOW_PHONE} {\n            margin-bottom: 30px;\n        }\n    }\n`\n\nexport const GameType = () => {\n    return <section>\n        <Container>\n            <Subheading>Choose type of the game</Subheading>\n            <CustomButton disabled>Single Player</CustomButton>\n            <Link to={PATH.MULTIPLAYER}>\n                <CustomButton>\n                    Multiplayer\n                </CustomButton>\n            </Link>\n        </Container>\n    </section>\n}","import React from 'react';\nimport styled from 'styled-components'\nimport {MoveFromRight} from \"../FadeIn\";\nimport {Subheading} from \"../Heading\";\nimport {CustomButton} from \"../Button\";\nimport {SCREEN, STORAGE} from \"../../constant/Constants\";\nimport {MultiplayerGame} from \"../../Game\";\n\nconst Container = styled(MoveFromRight)`\n    text-align: center; \n    \n    > button {\n        margin: auto 30px;\n        ${SCREEN.BELOW_PHONE} {\n            margin-bottom: 30px;\n        }\n    }\n`\n\nexport const MultiplayerLoad = ({onSelected}) => {\n    return <section>\n        <Container>\n            <Subheading>Choose type of the game</Subheading>\n            <CustomButton disabled={window.localStorage.getItem(STORAGE.MULTIPLAYER) === undefined || window.localStorage.getItem(STORAGE.MULTIPLAYER) === null}\n                          onClick={() => {\n                              console.log(window.localStorage.getItem(STORAGE.MULTIPLAYER));\n                              onSelected(MultiplayerGame.fromProps(\n                              JSON.parse(window.localStorage.getItem(STORAGE.MULTIPLAYER)))\n                          )}}\n            >\n                Load Game\n            </CustomButton>\n            <CustomButton onClick={() => onSelected(null)}>New Game</CustomButton>\n        </Container>\n    </section>\n}","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {PATH, SCREEN} from \"../constant/Constants\";\nimport {Link, Route, Switch} from \"react-router-dom\";\n\nconst Container = styled.header`\n    text-align: center; \n    margin: 5px;\n    max-width: 100vw;\n    position: relative; \n    \n    ${SCREEN.BELOW_PHONE} {\n        max-width: 500px;\n        margin: auto;\n    }\n    \n    > img {\n        margin:auto;\n        max-width: 80%\n    }\n`;\n\nconst SmallLogo = styled.h1`\n    display: inline-block; \n    text-indent: -9999px;\n    margin: auto;\n    width: 401px; \n    height: 263px;\n    border: none;\n    background: url(\"img/logo_great.svg\");\n    cursor: pointer;\n    transition: 1s;\n    ${({collapsed}) => collapsed && css`\n        width: 134px;\n        height: 87px; \n        background: url(\"img/logo_small.svg\") no-repeat;\n        background-size: cover;\n    `}\n`\n\nconst BackButton = styled.nav`\n    position: absolute; \n    left: 0;\n    top: 25%; \n    bottom: 75%;\n    margin-left: 30px;\n    cursor: pointer; \n`\n\nconst AboutButton = styled.nav`\n    position: absolute; \n    right: 0;\n    top: 25%; \n    bottom: 75%;\n    margin-right: 30px;\n    cursor: pointer; \n`\n\nexport const Header = ({collapsed, onBack}) => {\n    const back = <BackButton onClick={() => {onBack()}}>\n        <img src=\"img/back.svg\" alt=\"Go back\"/>\n    </BackButton>\n    return <Container>\n        <Switch>\n            <Route path={(PATH.MULTIPLAYER)}>\n                {back}\n            </Route>\n            <Route path={PATH.ABOUT}>\n                {back}\n            </Route>\n        </Switch>\n        <Link to={PATH.HOME}>\n            <SmallLogo collapsed={collapsed}>Memory Board Game</SmallLogo>\n        </Link>\n        <AboutButton>\n            <Link to={PATH.ABOUT}>\n                <img src=\"img/info.svg\"/>\n            </Link>\n        </AboutButton>\n\n    </Container>\n}","import React, {Component, useEffect, useState} from \"react\";\nimport axios from 'axios'\nimport {API, COLORS, FONT_SIZE} from \"../constant/Constants\";\nimport styled from 'styled-components'\nimport {Header} from \"./Header\";\nimport {Subheading} from \"./Heading\";\nimport {CustomButton} from \"./Button\";\n\nconst Container = styled.section`\n    text-align:center; \n`\n\nconst PersonalInfo = styled.div`\n    justify-content: center;\n    align-items: center;\n   \n    & > img {\n        margin-top: -10px; \n        width: 250px;\n        height: 250px;\n   }\n   \n   & > * {\n    color: ${COLORS.WHITE};\n    font-size: ${FONT_SIZE.LARGE};\n    margin: 15px;\n    \n    & > a {\n        color: ${COLORS.DARK_WASSERMANN}\n    }\n   }\n`\n\nconst ButtonWrapper = styled.div`\n    margin: 24px; \n`\n\nexport class About extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false,\n            user: null\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): boolean {\n        return nextState !== this.state\n    }\n\n    componentDidMount(): void {\n        axios.get(API.GITHUB_PATH).then((response) => {\n            this.setState({user: response.data})\n        }).catch((err) => console.error(err))\n    }\n\n    render() {\n\n        const clearStorage = () => {\n            if (window.confirm(\"You are about to delete the storage!\")) window.localStorage.clear();\n        }\n\n        return <Container>\n            {this.state.user && <Subheading>The author</Subheading>}\n            {this.state.user && <PersonalInfo>\n                <img src={this.state.user.avatar_url}/>\n                <div>{this.state.user.name}</div>\n                <div><a href={this.state.user.html_url}>@{this.state.user.login}</a></div>\n\n            </PersonalInfo>}\n            <ButtonWrapper>\n                <CustomButton onClick={clearStorage}>Clear storage</CustomButton>\n            </ButtonWrapper>\n        </Container>\n    }\n}\n\nexport default About","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.footer`\n    width: 100vw;\n    height: 3em;\n    display: block;\n    text-align: center;\n    bottom: 0;\n`\n\nexport const Footer = () => {\n    return <Container>\n        (c) 2020\n    </Container>\n}\nexport default Footer","import React from \"react\";\nimport styled from 'styled-components';\nimport {Header} from \"./Header\";\nimport Footer from \"./Footer\";\nimport {HashRouter as Router} from \"react-router-dom\";\nimport {FadeIn} from \"./FadeIn\";\n\nconst Container = styled.div`\n    display: flex; \n    min-height: 100vh; \n    position: relative; \n    flex-direction: column;\n`\n\nconst Main = styled.main`\n   position: relative; \n   flex-grow: 1; \n`\n\nexport const Layout = ({children, collapsed}) => {\n    const header = <Header collapsed={collapsed ?? true} onBack={() => {\n        window.history.back();\n    }\n    }/>\n    return <Router basename=\"/\">\n        <Container>\n                <FadeIn>\n                    {header}\n                </FadeIn>\n            <Main>\n                {children}\n            </Main>\n            <Footer/>\n        </Container>\n    </Router>\n}\n\nexport default Layout","// https://stackoverflow.com/questions/3144711/find-the-time-left-in-a-settimeout/36389263#36389263\n\nexport const getTimeout = (function () { // IIFE\n    const _setTimeout = setTimeout, // Reference to the original setTimeout\n        map = {}; // Map of all timeouts with their start date and delay\n\n    setTimeout = function (callback, delay) { // Modify setTimeout\n        const id = _setTimeout(callback, delay); // Run the original, and store the id\n\n        map[id] = [Date.now(), delay]; // Store the start date and delay\n\n        return id; // Return the id\n    };\n\n    return function (id) { // The actual getTimeLeft function\n        const m = map[id]; // Find the timeout in map\n\n        // If there was no timeout with that id, return NaN, otherwise, return the time left clamped to 0\n        return m ? Math.max(m[1] - Date.now() + m[0], 0) : NaN;\n    }\n})();","import React, {Component} from 'react';\nimport './App.css';\nimport {MultiplayerGame} from \"./Game\";\nimport {Playground} from \"./component/game/Playground\";\nimport {PlayerBar} from \"./component/game/PlayerBar\";\nimport {WelcomeScreen} from \"./component/WelcomeScreen\";\nimport {PlayerCount} from \"./component/settings/PlayerCount\";\nimport {PlayerNames} from \"./component/settings/PlayerNames\";\nimport {GameType} from \"./component/settings/GameType\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {HASH, PATH, STORAGE} from \"./constant/Constants\";\nimport {MultiplayerLoad} from \"./component/settings/MultiplayerLoad\";\nimport About from \"./component/About\";\nimport Layout from \"./component/Layout\";\nimport {getTimeout} from \"./util/TimeoutUtil\";\n\nexport function saveMultiplayer(game) {\n    console.log(\"saving game\", game);\n    for (const card of game.cards) {\n        if (card.timeout !== null) {\n            card.remainining = getTimeout(card.timeout);\n            clearTimeout(card.timeout)\n        }\n    }\n\n    console.log(game)\n    window.localStorage.setItem(STORAGE.MULTIPLAYER, JSON.stringify(game))\n}\n\nfunction isWelcome() {\n    if (JSON.parse(window.localStorage.getItem(STORAGE.WELCOME)) === null || JSON.parse(window.localStorage.getItem(STORAGE.WELCOME)).welcome === null) return false;\n    return JSON.parse(window.localStorage.getItem(STORAGE.WELCOME)).welcome\n}\n\nfunction welcome() {\n    window.localStorage.setItem(STORAGE.WELCOME, JSON.stringify({welcome: true}));\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            game: null,\n            welcome: isWelcome(),\n            collapsed: false,\n            playerCount: false,\n            loaded: false,\n            activeCard: null\n        };\n    }\n\n    render() {\n        const finishWelcomeScreen = () => {\n            this.setState({collapsed: true});\n\n            setTimeout(() => {\n                welcome();\n                this.setState({welcome: JSON.parse(window.localStorage.getItem(STORAGE.WELCOME)).welcome});\n                console.log(JSON.parse(window.localStorage.getItem(STORAGE.WELCOME)).welcome)\n            }, 1000)\n        };\n\n        // start new game\n        const initGame = (players) => {\n            const game = new MultiplayerGame(16, players)\n            this.setState({game: game})\n            saveMultiplayer(game)\n        };\n\n        class Multiplayer extends Component {\n            constructor(props) {\n                super(props);\n                if (!isWelcome()) welcome();\n                console.log(\"Multiplayer constructor\");\n                this.state = {\n                    game: null,\n                    welcome: isWelcome(),\n                    collapsed: true,\n                    playerCount: false,\n                    activeCard: null\n                };\n            }\n\n            componentWillUnmount(): void {\n                if (this.state.game !== null) saveMultiplayer(this.state.game)\n            }\n\n            render() {\n                return <>\n                    {!this.state.loaded &&\n                    <MultiplayerLoad onSelected={(game) => {\n                        this.setState({loaded: true});\n                        if (game === null) {\n                            this.setState({playerCount: 0})\n                        }\n                        this.setState({game: game})\n                    }}/>\n                    }\n                    {this.state.loaded && this.state.playerCount === 0 &&\n                    <PlayerCount onFinished={(playerCount) => this.setState({playerCount: playerCount})}/>\n                    }\n                    {this.state.loaded && this.state.playerCount > 0 && !this.state.game && <>\n                        <PlayerNames count={this.state.playerCount} onFinished={players => initGame(players)}/></>}\n                    {this.state.loaded && this.state.game && this.state.game.players && <>\n                        <PlayerBar players={this.state.game.players}/>\n                        <Playground game={this.state.game}/>\n                    </>}\n                </>\n            }\n        }\n\n        return (\n            <Layout collapsed={this.state.collapsed || this.state.welcome || window.location.hash !== HASH.HOME}\n                    shouldFadeIn={!this.state.welcome}>\n                <Switch>\n                    <Route path={PATH.MULTIPLAYER}>\n                        <Multiplayer/>\n                    </Route>\n                    <Route path={PATH.ABOUT}>\n                        <About/>\n                    </Route>\n                    <Route path={PATH.HOME}>\n                        {!this.state.welcome && <>\n                            <WelcomeScreen onFinished={() => {\n                                finishWelcomeScreen()\n                            }}/>\n                        </>}\n                        {\n                            this.state.welcome && <GameType/>\n                        }\n                    </Route>\n                </Switch>\n\n            </Layout>\n        )\n            ;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}