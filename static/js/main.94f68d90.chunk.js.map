{"version":3,"sources":["constant/Constants.js","Game.js","component/game/CardView.js","component/game/Playground.js","component/game/PlayerBar.js","component/visuals/Button.js","component/visuals/Animations.js","component/visuals/Heading.js","component/pages/WelcomeScreen.js","component/settings/PlayerNumber.js","component/settings/PlayerCount.js","component/settings/PlayerNames.js","component/settings/GameType.js","component/settings/MultiplayerLoad.js","component/layout/Header.js","component/pages/About.js","component/layout/Footer.js","component/layout/Layout.js","util/TimeoutUtil.js","component/settings/SingleplayerLoad.js","component/pages/Multiplayer.js","component/pages/Singleplayer.js","App.js","serviceWorker.js","index.js"],"names":["IMAGES","COLORS","FONT_SIZE","SCREEN","STRING","PATH","HASH","API","STORAGE","REJECT_ANIMATION","css","delay","duration","Game","count","console","log","this","cards","i","j","push","Card","activeCard","discovered","shuffle","error","props","game","length","readGameProps","card","fromProps","first","second","winHandler","matchHandler","lossHandler","pairsWith","handleMatch","isWon","handleLoss","active","counter","index","Math","floor","random","temp","MultiplayerGame","players","activePlayer","timeout","getFirstPlayerIndex","score","player","Player","e","undefined","indexOf","SinglePlayerGame","number","image","id","getId","remainining","valueEquals","isTheSame","hasOwnProperty","0","color","src","1","2","3","4","5","6","7","name","decorate","observable","Container","styled","div","Inner","g","FlipCard","Back","rect","fill","Front","Img","CardView","clickHandler","timeoutHandler","useState","setActive","setDiscovered","setTimeout","onClick","clearTimeout","viewBox","x1","y1","x2","y2","stopColor","offset","size","width","height","rx","href","PlaygroundContainer","section","Playground","setPlayerTimeout","forEach","handleCardClick","handleTimeout","handlePairing","alert","map","saveMultiplayer","window","location","reload","Component","PlayerField","PlayerName","Indicator","shouldAnimate","start","end","PlayerBar","setActivePlayer","useReducer","x","forceUpdate","iStart","iEnd","iDuration","iAnimation","setIAnimation","observe","change","newValue","fields","StyledButton","button","disabled","CustomButton","children","type","event","FadeIn","MoveFromRight","Subheading","h2","finished","WelcomeScreen","onFinished","setFinished","Wrapper","enabled","PlayerNumber","value","onSelect","main","shouldMove","Numbers","PlayerCount","setShouldMove","playerCount","setPlayerCount","onSelected","numbers","FormContainer","FormSection","TextField","input","Form","form","Indicators","Circle","circle","IndicatorWrapper","IndicatorsWrapper","cx","cy","r","PlayerForm","state","handleInputChange","bind","target","setState","isLong","onSubmit","preventDefault","autoComplete","autocomplete","onChange","placeholder","required","PlayerNames","forms","indicators","filled","GameType","to","MultiplayerLoad","localStorage","getItem","JSON","parse","header","SmallLogo","h1","collapsed","BackButton","nav","AboutButton","Header","onBack","back","alt","path","PersonalInfo","ButtonWrapper","About","loaded","user","nextProps","nextState","nextContext","axios","get","then","response","data","catch","err","avatar_url","html_url","login","confirm","clear","footer","Footer","Main","Layout","history","basename","getTimeout","_setTimeout","callback","Date","now","m","max","NaN","SingleplayerLoad","a","selectFile","file","reader","FileReader","readAsText","onload","readerEvent","result","Promise","resolve","document","createElement","multiple","accept","onchange","_","files","Array","from","click","isSingleplayerInStorage","saveAs","Blob","toString","importGame","Multiplayer","isWelcome","welcome","initGame","Singleplayer","saveSingleplayer","saveGame","key","setItem","stringify","removeItem","App","hash","shouldFadeIn","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.94f68d90.chunk.js","sourcesContent":["import {css} from 'styled-components'\n\nexport const IMAGES = {\n    IMG_1: \"img/img_1.svg\",\n    IMG_2: \"img/img_2.svg\",\n    IMG_3: \"img/img_3.svg\",\n    IMG_4: \"img/img_4.svg\",\n    IMG_5: \"img/img_5.svg\",\n    IMG_6: \"img/img_6.svg\",\n    IMG_7: \"img/img_7.svg\",\n    IMG_8: \"img/img_8.svg\",\n}\n\nexport const COLORS = {\n    WASSERMANN: \"#6AA331\",\n    LIGHT_WASSERMANN: \"#ACD87E\",\n    DARK_WASSERMANN: \"#4a7524\",\n    GREEN_AGAIN: \"#7AB341\",\n    POISON: \"#B8FF2C\",\n    POISONOUS: \"#A0FF4F\",\n    YELLOW_GREEN: \"#D8D365\",\n    ANOTHER_GREEN: \"#B0DD70\",\n    GRAY_BUT_GREEN: \"#9CAF8C\",\n    UGLY_GREEN: \"#B7C59C\",\n    SILLY_GREEN: \"#96E6A1\",\n    GREEN: \"#93D559\",\n    TURQUOISE: \"#1AD7E4\",\n    BARBIE: \"#E41ABB\",\n    VIOLETTE: \"#7C7BC1\",\n    COMMIE: \"#C90000\",\n    DEEP_PURPLE: \"#482666\",\n    JUST_GOLD: \"#FFD100\",\n    MARINE: \"#12407B\",\n    ORANGE: \"#FF6200\",\n    WHITE: \"#FFFFFF\",\n    WHITE_TRANSPARENT: \"rgb(255, 255, 255, 50)\",\n    GRAY: \"#BCBDBC\",\n    LIGHT_BLUE: \"#7AD9EF\",\n    LIGHT_GRAY: \"#D7D7D7\",\n    LIGHT_YELLOW: \"#E7DEB1\",\n    LIGHT_ORANGE: \"#E7C3B1\",\n    LIGHT_BROWN: \"#877467\"\n}\n\nexport const FONT_SIZE = {\n    XLARGE: \"36px\",\n    LARGE: \"24px\"\n}\n\nexport const SCREEN = {\n    ABOVE_TABLET: \"@media (min-width: 1000px)\",\n    BELOW_PHONE: \"@media (max-width: 700px)\"\n}\n\nexport const STRING = {\n    WELCOME_TEXT: \"Hello and welcome to the memory game!\",\n    NUMBER_OF_PLAYERS: \"Select number of players\",\n    NAME_OF_PLAYER: \"Insert name of Player\"\n}\n\nexport const PATH = {\n    MULTIPLAYER: \"/multiplayer\",\n    ABOUT: \"/about\",\n    HOME: \"/\",\n    BASENAME: \"/memory-game\",\n    SINGLEPLAYER: \"/singleplayer\"\n}\n\nexport const HASH = {\n    HOME: `#/`\n}\n\nexport const API = {\n    GITHUB_PATH: \"https://api.github.com/users/kopemar\"\n}\n\nexport const STORAGE = {\n    SINGLEPLAYER: \"singleplayer_in_storage\",\n    MULTIPLAYER: \"multiplayer_in_storage\",\n    WELCOME: \"has_been_welcome\",\n}\n\nexport const MAX_PLAYER_COUNT = 4;\nexport const MIN_PLAYER_COUNT = 2;\n\nexport const REJECT_ANIMATION = css`\n            @keyframes reject {\n                0% {transform: translateX(15px);}\n                50% {transform: translateX(-15px);}\n                100% {transform: translateX(0px)}\n            }\n            animation-name: reject;\n            animation-delay: ${({delay}) => delay ? delay : 0}s;\n            animation-duration: ${({duration}) => duration ? duration : 0.5}s;\n            animation-fill-mode: forwards;\n            `","import {COLORS, IMAGES} from \"./constant/Constants\";\nimport {decorate, observable} from \"mobx\";\n\nclass Game {\n    static fromProps(props) {\n        try {\n            const game = new Game(props.cards.length);\n            this.readGameProps(props, game)\n            return game;\n        } catch {\n            throw \"Not a valid JSON game\"\n        }\n    }\n\n    static readGameProps(props, game) {\n        game.cards = [];\n\n        for (const card of props.cards) {\n            card && game.cards.push(Card.fromProps(card));\n        }\n\n        game.activeCard = props.activeCard == null ? null : Card.fromProps(props.activeCard);\n        game.discovered = props.discovered;\n    }\n\n    constructor(count) {\n        console.log(\"Game constructor\")\n        this.count = count;\n        if (count % 2 === 0) {\n            this.cards = [];\n            for (let i = 0; i < count/2; i++) {\n               for (let j = 0; j < 2; j++) {\n                   this.cards.push(new Card(i))\n               }\n            }\n            this.activeCard = null;\n            this.discovered = 0;\n            this.shuffle()\n        } else {\n            console.error(\"Not even number of cards\")\n        }\n        console.log(this)\n    }\n\n    isWon () { return this.count === this.discovered;}\n\n    handleMatch() {\n        // to be defined in subclasses\n    }\n\n    handlePairing (first, second, winHandler = () => {}, matchHandler = () => {}, lossHandler =  () => {}) {\n        // match\n        if (first.pairsWith(second)) {\n            if (!second.discovered && !first.discovered) this.discovered += 2;\n            first.discovered = true;\n            second.discovered = true;\n            this.handleMatch();\n            matchHandler()\n\n            if (this.isWon()) winHandler();\n        } else {\n            this.handleLoss();\n            first.active = false;\n            second.active = false;\n            lossHandler()\n        }\n\n        this.activeCard = null;\n    }\n\n    handleLoss() {\n        // to be defined in subclasses\n    }\n\n    shuffle() {\n        let counter = this.cards.length;\n\n        // shuffle algorithm from https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\n        while (counter > 0) {\n            const index = Math.floor(Math.random() * counter);\n\n            counter--;\n            const temp = this.cards[counter];\n            this.cards[counter] = this.cards[index];\n            this.cards[index] = temp;\n        }\n    }\n}\n\nexport class MultiplayerGame extends Game {\n    activePlayer = 0;\n    timeout = null;\n\n    static fromProps(props) {\n        try {\n            const game = new MultiplayerGame(props.cards.length, []);\n            super.readGameProps(props, game)\n\n            for (const player of props.players) {\n                game.players.push(player === null ? null : Player.fromProps(player))\n            }\n            game.activePlayer = props.activePlayer;\n            return game;\n        } catch (e) {\n            throw 'Invalid card'\n        }\n    }\n\n    handleMatch() {\n        super.handleMatch();\n        console.log(this)\n        if (this.activePlayer !== null) this.players[this.activePlayer].score += 2;\n    }\n\n    handleLoss() {\n        super.handleLoss();\n        this.activePlayer = this.activePlayer + 2 > this.players.length ? this.getFirstPlayerIndex(): this.activePlayer + 1;\n        console.log(this.activePlayer)\n    }\n\n    constructor(count, players) {\n        super(count);\n        this.players = players;\n        this.activePlayer = this.getFirstPlayerIndex();\n    }\n\n    getFirstPlayerIndex() {\n        console.log(this.players)\n        for (const player of this.players) {\n            if (player !== undefined && player !== null) return this.players.indexOf(player)\n        }\n\n    }\n\n}\n\nexport class SinglePlayerGame extends Game {\n    constructor(count) {\n        super(count)\n    }\n}\n\nexport class Card {\n    static fromProps(props) {\n        try {\n            const card = new Card(props.number);\n            card.active = props.active;\n            card.id = props.id;\n            card.discovered = props.discovered;\n            card.remainining = props.remainining;\n            return card;\n        } catch {\n            throw 'Invalid card'\n        }\n    }\n\n    constructor(number) {\n        this.number = number;\n        this.props = Card.image[number];\n        this.active = false;\n        this.id = Card.getId();\n        this.discovered = false;\n        this.timeout = null;\n        this.remainining = 0;\n    }\n\n    isTheSame(card) {\n        return this.valueEquals(card) && this.id === card.id;\n    }\n\n    pairsWith (card) {\n        return this.valueEquals(card) && !this.isTheSame(card);\n    }\n\n    valueEquals (card) {\n        if (card === undefined) return this === undefined;\n        if (card === null) return this === null;\n        if (card.hasOwnProperty(\"number\")) {\n            return card.number === this.number\n        }\n        return false\n    }\n\n    static counter = 0;\n\n    static getId = () => {\n        return Card.counter++;\n    }\n\n    static image = {\n        0: {color: COLORS.SILLY_GREEN, src: IMAGES.IMG_1},\n        1: {color: COLORS.LIGHT_ORANGE, src: IMAGES.IMG_2},\n        2: {color: COLORS.LIGHT_GRAY, src: IMAGES.IMG_3},\n        3: {color: COLORS.LIGHT_BROWN, src: IMAGES.IMG_4},\n        4: {color: COLORS.LIGHT_YELLOW, src: IMAGES.IMG_5},\n        5: {color: COLORS.LIGHT_BLUE, src: IMAGES.IMG_6},\n        6: {color: COLORS.LIGHT_GRAY, src: IMAGES.IMG_7},\n        7: {color: COLORS.LIGHT_YELLOW, src: IMAGES.IMG_8},\n    }\n}\n\nexport class Player {\n    score = 0;\n    static fromProps (props) {\n        try {\n            const player = new Player(props.name);\n            player.score = props.score;\n            return player;\n        } catch {\n            throw 'Invalid player'\n        }\n    }\n\n    constructor(name) {\n        this.name = name;\n    }\n}\n\n// makes Player class variables observable\ndecorate(Player, {\n    score: observable\n})\n\n// makes MultiplayerGame class variables observable\ndecorate(MultiplayerGame, {\n    activePlayer: observable,\n    timeout: observable\n})","import React, {useState} from 'react';\nimport styled, {css} from 'styled-components';\nimport {COLORS} from \"../../constant/Constants\";\n\nconst Container = styled.div`\n    box-sizing: border-box;\n    width: 25%;\n    padding: 10px;\n    border-radius: 10px;\n    perspective: 1000px;\n`;\n\nconst Inner = styled.g`\n    position: relative;\n    fill: transparent;\n    transition: transform 0.6s;\n    transform-style: preserve-3d;\n    text-align: center;\n    ${({active}) => active && css`transform: rotateY(180deg);`}\n`\n\nconst FlipCard = styled.g`\n    perspective: 1000px;\n    position: relative; \n`\n\nconst Back = styled.rect`\n    width: 100%;\n    height: 100%;\n    rx: 10;\n    fill: url(${({fill}) => fill});\n    stroke: ${({active}) => active ? COLORS.DARK_WASSERMANN : COLORS.WASSERMANN}; \n    position: absolute;\n    backface-visibility: hidden;\n    \n    &:hover {\n        stroke: ${COLORS.DARK_WASSERMANN}\n    }\n`\n\nconst Front = styled.rect`\n    width: 100%;\n    height: 100%;\n    fill: ${({src}) => src};\n    stroke: ${({active}) => !active ? COLORS.DARK_WASSERMANN : COLORS.WASSERMANN}; \n    position: absolute;\n    backface-visibility: hidden;\n    transform: rotateY(180deg);\n`\n\nconst Img = styled.image`\n    width: 100%;\n    height: 100%;\n    backface-visibility: hidden;\n    transform: rotateY(180deg);\n`\n\nexport const CardView = ({card, clickHandler, timeoutHandler, game}) => {\n    const [active, setActive] = useState(card.active);\n    const [discovered, setDiscovered] = useState(card.discovered);\n\n    const getSelector = (id) => {\n        return `#${id}`\n    }\n\n    // for reloading game -- if there was some time remaining\n    if (card.remainining > 0) {\n        card.timeout = setTimeout(() => {\n            timeoutHandler(card)\n            if (!discovered) setDiscovered(card.discovered)\n            setActive(card.discovered);\n        }, card.remainining);\n    }\n\n    const viewBoxSize = 160;\n    const gradientId = \"green_linear_gradient\";\n\n    const handleClick = () => {\n        clickHandler(card)\n        setActive(true);\n\n        // turning back handler\n        if (card.pairsWith(game.activeCard)) {\n            clearTimeout(game.activeCard.timeout);\n        }\n\n        card.timeout = setTimeout(() => {\n            timeoutHandler(card)\n            if (!discovered) setDiscovered(card.discovered)\n            setActive(card.discovered);\n        }, 1500);\n    }\n\n    return (\n        <Container onClick={() => {if (!card.discovered) handleClick()}}>\n            <svg viewBox={`0 0 ${viewBoxSize} ${viewBoxSize}`}>\n                <defs>\n                    <linearGradient x1=\"50%\" y1=\"0%\" x2=\"50%\" y2=\"100%\" id={gradientId}>\n                        <stop stopColor={COLORS.LIGHT_WASSERMANN} offset=\"0%\"/>\n                        <stop stopColor={COLORS.GREEN_AGAIN} offset=\"100%\"/>\n                    </linearGradient>\n                </defs>\n                <FlipCard>\n                    <Inner active={card.isTheSame(game.activeCard) || active || discovered} size={viewBoxSize}>\n                        <Back active={card.isTheSame(game.activeCard) || active || discovered} fill={getSelector(gradientId)} id=\"card_bg_rectangle\" width=\"100%\" height=\"100%\" rx=\"10\"/>\n                        <Front active={card.isTheSame(game.activeCard) || active || discovered} src={card.props.color} width=\"100%\" height=\"100%\" rx=\"10\"/>\n                        <Img href={card.props.src} width=\"100%\" height=\"100%\"/>\n                    </Inner>\n                </FlipCard>\n            </svg>\n        </Container>\n    )\n}","import React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {CardView} from \"./CardView\";\nimport {COLORS} from \"../../constant/Constants\";\nimport {MultiplayerGame} from \"../../Game\";\nimport {saveMultiplayer} from \"../../App\";\n\nconst PlaygroundContainer = styled.section`\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 700px;\n    padding: 10px;\n    background: ${COLORS.WHITE};\n    border-radius: 4px;\n    border: 1px solid ${COLORS.GRAY_BUT_GREEN};\n    margin: 10px auto;\n`;\n\nexport class Playground extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount(): void {\n        if (this.props.game instanceof MultiplayerGame) {\n            this.setPlayerTimeout();\n        }\n    }\n\n    setPlayerTimeout () {\n        this.props.game.timeout = setTimeout(() => {\n            this.props.game.handleLoss();\n            this.setPlayerTimeout();\n        }, 6000)\n    }\n\n    render () {\n        const cards = [];\n\n        this.props.game.cards.forEach((card) => {\n            cards.push(<CardView clickHandler={(card) => handleCardClick(card)}\n                                 card={card}\n                                 game={this.props.game}\n                                 timeoutHandler={(card) => handleTimeout(card)}/>)\n        })\n\n        const handleTimeout = (card) => {\n            if (!card.discovered) {\n                card.active = false;\n            }\n            this.props.game.activeCard = null;\n        }\n\n        const handleCardClick = (card) => {\n            card.active = true;\n            console.log(this.props.game);\n            if (this.props.game.activeCard === null) {\n                this.props.game.activeCard = card;\n            } else {\n                this.props.game.handlePairing(this.props.game.activeCard, card, () => {\n                    setTimeout(() => {\n                        if (this.props.game instanceof MultiplayerGame) {\n                            alert(`Game has ended! Scores: ${this.props.game.players.map((player) => {\n                                return player && `${player.name}: ${player.score}, `\n                            })}`);\n                            saveMultiplayer(null);\n                            window.location.reload();\n                        } else {\n                            alert(\"You won this game!\")\n                        }\n\n                    }, 500)\n                });\n\n                if (this.props.game instanceof MultiplayerGame) {\n                    clearTimeout(this.props.game.timeout);\n                    this.setPlayerTimeout();\n                }\n            }\n        }\n\n        return <PlaygroundContainer>\n            {cards}\n        </PlaygroundContainer>\n    }\n}\n","import React, {useReducer, useState} from 'react';\nimport styled, {css} from 'styled-components';\nimport {COLORS, FONT_SIZE, SCREEN} from \"../../constant/Constants\";\nimport {observe} from \"mobx\"\n\nconst Container = styled.div`\n    position: relative;\n    display: flex;\n    background: ${COLORS.WHITE}; \n    min-height: 100px;\n    ${SCREEN.ABOVE_TABLET} {\n        padding: 6px 200px;\n    }\n    ${SCREEN.BELOW_PHONE} {\n        flex-direction: column; \n        padding: 20px;\n    }\n    > * {\n        text-align: center; \n    }\n`;\n\nconst PlayerField = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    text-align: center\n    ${SCREEN.BELOW_PHONE} {\n        position: absolute;\n    }\n`\n\nconst PlayerName = styled.div`\n    height: 0;\n    flex-grow: 1; \n    text-transform: uppercase;\n    padding: 20px;\n    font-size: ${FONT_SIZE.XLARGE};\n    color: ${({active}) => active ? COLORS.SILLY_GREEN : COLORS.GRAY};\n    transition: 1s linear;\n    \n    ${SCREEN.BELOW_PHONE} {\n        text-align: left;\n        padding: 5px;\n        font-size: ${FONT_SIZE.LARGE};\n    }\n`\n\nconst Indicator = styled.div`\n    background: ${COLORS.SILLY_GREEN};\n    position: absolute;\n    height: 10px;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n    margin-bottom: 4px;\n    transition: 2s linear;\n    \n    ${({shouldAnimate}) => shouldAnimate && css`\n        @keyframes indicator {\n            from {\n                width: ${({start}) => start ? start : 100}%;\n            }\n            to {\n                width: ${({end}) => end ? end : 0}%;\n            }\n        }\n        animation-name: indicator; \n        animation-duration: ${({duration}) => duration ? duration : 6000}ms; \n        animation-timing-function: linear;`\n    }\n    \n    \n`\n\nexport const PlayerBar = ({game}) => {\n    const [activePlayer, setActivePlayer] = useState(game.players[game.activePlayer]);\n    const [, forceUpdate] = useReducer(x => x + 1, 0);\n    const [iStart] = useState(100);\n    const [iEnd] = useState(0);\n    const [iDuration] = useState(6000);\n    const [iAnimation, setIAnimation] = useState(true);\n    console.log(game)\n    for (const player of game.players) {\n        if (player !== null && player !== undefined) {\n            observe(player, \"score\", () => {\n                forceUpdate();\n            })\n        }\n    }\n\n    observe(game, \"activePlayer\", change => {\n        setActivePlayer(game.players[change.newValue])\n    });\n\n    observe(game, \"timeout\", () => {\n        setIAnimation(false)\n\n        setTimeout(() => {\n            setIAnimation(true)\n        }, 100)\n    })\n\n    const fields = [];\n    for (let i = 1; i < game.players.length; i++) {\n        const player = game.players[i];\n        player && fields.push(<PlayerField><PlayerName\n            active={player === activePlayer}>{player.name} ({player.score})</PlayerName></PlayerField>)\n    }\n\n    return <Container>\n        {fields}\n        <Indicator start={iStart} end={iEnd} duration={iDuration} shouldAnimate={iAnimation}/>\n    </Container>\n}","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {COLORS, FONT_SIZE, REJECT_ANIMATION, SCREEN} from \"../../constant/Constants\";\n\nconst StyledButton = styled.button`\n    border: none; \n    height: 64px;\n    background-image: linear-gradient(to bottom , ${COLORS.POISON}, ${COLORS.POISONOUS});\n    min-width: 300px;\n    border-radius: 64px;\n    font-size: ${FONT_SIZE.LARGE};\n    color: ${COLORS.WHITE};\n    text-transform: uppercase;\n    font-family: 'Raleway', sans-serif;\n    opacity: 0.5; \n    transition: 1s; \n    cursor: pointer; \n    \n    ${SCREEN.BELOW_PHONE} {\n        min-width: 0;\n        width: 60vw; \n        opacity: 1;\n    }\n    \n    :hover {\n        opacity: 1;\n    }\n    \n    ${({disabled}) => disabled && css`\n        background-image: linear-gradient(to bottom , ${COLORS.GRAY_BUT_GREEN}, ${COLORS.UGLY_GREEN});\n        cursor: not-allowed; \n        \n        &:hover {\n            opacity: 0.5;\n            ${REJECT_ANIMATION}\n        }\n    `}\n`\n\nexport const CustomButton = ({children, onClick, disabled}) => {\n    return <StyledButton disabled={disabled} type=\"submit\" onClick={(event) => {if (!disabled && onClick) onClick(event)}}>{children}</StyledButton>\n}","import styled from \"styled-components\";\n\nexport const FadeIn = styled.div`\n    @keyframes fade-in {\n        from {opacity: 0;}\n        to {opacity: 1;}\n    }\n    animation-name: fade-in;\n    opacity: 0;\n    animation-delay: ${({delay}) => delay ? delay : 0}s;\n    animation-duration: ${({duration}) => duration ? duration : 2}s;\n    animation-fill-mode: forwards;\n`;\n\nexport const MoveFromRight = styled.div`\n    @keyframes move-from-right {\n        from {transform: translateX(100%);}\n        to {transform: translateX(0%);}\n    }\n    animation-name: move-from-right;\n    transform: translateX(100%)\n    animation-delay: ${({delay}) => delay ? delay : 0}s;\n    animation-duration: ${({duration}) => duration ? duration : 2}s;\n    animation-fill-mode: forwards;\n`","import styled from \"styled-components\";\nimport {COLORS, FONT_SIZE, SCREEN} from \"../../constant/Constants\";\n\nexport const Subheading = styled.h2`\n    margin: 50px;\n    color: ${COLORS.WHITE}; \n    font-size: ${FONT_SIZE.XLARGE};\n    font-weight: 500;\n    text-align: center;\n    \n    ${SCREEN.BELOW_PHONE} {\n        font-size: ${FONT_SIZE.LARGE};\n    }\n`","import React, {useState} from 'react'\nimport styled, {css} from \"styled-components\";\nimport {STRING} from \"../../constant/Constants\";\nimport {CustomButton} from \"../visuals/Button\";\nimport {FadeIn} from \"../visuals/Animations\";\nimport {Subheading} from \"../visuals/Heading\";\n\nconst Container = styled.section`\n    max-width: 100%;\n    text-align: center;\n    transition: 1s;\n    \n    ${({finished}) => finished && css`\n        transform: translateX(-100%);\n    `}\n`\n\nexport const WelcomeScreen = ({onFinished}) => {\n    const [finished, setFinished] = useState(false);\n\n    const finish = () => {\n        setFinished(true)\n        onFinished()\n    }\n\n    return <Container finished={finished}>\n        <FadeIn delay={1}>\n            <Subheading>{STRING.WELCOME_TEXT}</Subheading>\n        </FadeIn>\n        <FadeIn delay={2}>\n            <CustomButton onClick={() => finish()}>Next</CustomButton>\n        </FadeIn>\n    </Container>\n}","import React from 'react';\nimport styled, {css} from 'styled-components'\nimport {COLORS, FONT_SIZE} from \"../../constant/Constants\";\n\nconst Wrapper = styled.section`\n    margin: 10px;\n    width: 136px;\n    height: 168px;\n    border-radius: 60px; \n    text-align: center;\n    background: ${COLORS.GRAY_BUT_GREEN};\n    color: ${COLORS.WHITE};\n    font-size: ${FONT_SIZE.XLARGE};\n    \n    &, >p {\n        transition: 2s;\n    }\n    \n    > p {\n        opacity: 0.5;\n        height: 20%;\n        padding: 40%;\n    }\n    \n    &:hover {\n        > p {\n            opacity: 1;\n        }\n        background: ${COLORS.GREEN};\n    }\n    \n    ${({enabled}) => enabled && css`\n        > p {\n            opacity: 1;\n        }\n        background: ${COLORS.GREEN};\n        border: 3px solid ${COLORS.DARK_WASSERMANN}\n    `}\n`;\n\nexport const PlayerNumber = ({value, onSelect, enabled}) => {\n    return <Wrapper onClick={()=> onSelect(value)} enabled={enabled}>\n        <p>{value}</p>\n    </Wrapper>\n}","import React, {useState} from 'react'\nimport styled, {css} from 'styled-components'\nimport {Subheading} from \"../visuals/Heading\";\nimport {MAX_PLAYER_COUNT, MIN_PLAYER_COUNT, STRING} from \"../../constant/Constants\";\nimport {PlayerNumber} from \"./PlayerNumber\";\nimport {CustomButton} from \"../visuals/Button\";\n\nconst Container = styled.main`\n    transform: translateX(100%);\n    transition: 1s; \n    text-align: center;\n    ${({shouldMove}) => shouldMove && css`\n        transform: translateX(0%);\n    `}\n`;\n\nconst Numbers = styled.div`\n    width: 100%;\n    display: flex;\n    margin: auto;\n    justify-content: center;\n`\n\nexport const PlayerCount = ({onFinished}) => {\n    const [shouldMove, setShouldMove] = useState(false);\n    const [playerCount, setPlayerCount] = useState(0)\n\n    const onSelected = (value) => {\n        setPlayerCount(value);\n    };\n\n    const numbers = [];\n    for (let i = MIN_PLAYER_COUNT; i <= MAX_PLAYER_COUNT; i++) {\n        numbers.push(<PlayerNumber value={i} enabled={playerCount === i} onSelect={(value) => onSelected(value)}/>)\n    }\n\n    setTimeout(() => setShouldMove(true), 100)\n    return <section><Container shouldMove={shouldMove}>\n        <Subheading>{STRING.NUMBER_OF_PLAYERS}</Subheading>\n        <Numbers>\n            {numbers}\n        </Numbers>\n        <CustomButton disabled={playerCount === 0} onClick={()=> {onFinished(playerCount)}}>Next</CustomButton>\n    </Container>\n    </section>\n}","import React, {useState, Component} from 'react'\nimport styled, {css} from 'styled-components';\nimport {Subheading} from \"../visuals/Heading\";\nimport {COLORS, FONT_SIZE, SCREEN, STRING} from \"../../constant/Constants\";\nimport {CustomButton} from \"../visuals/Button\";\nimport {MoveFromRight} from \"../visuals/Animations\";\nimport {Player} from \"../../Game\";\n\nconst Container = styled.div`\n    position: relative; \n`\n\nconst FormContainer = styled.div`\n    width: 100vw;\n    \n    ${({active}) => active && css`\n        transform: translateX(-${(active - 1) * 100}%);\n    `}\n    transition: 2s; \n`;\n\nconst FormSection = styled.section`\n    width: 100vw;\n    display: inline-block;\n    position: absolute; \n    \n    ${({number}) => number && css`\n        left: ${(number - 1) * 100}%;\n    `}\n`\n\nconst TextField = styled.input`\n    display: block; \n    margin:  0 auto 64px;    \n    height: 64px;\n    min-width: 300px;\n    border-radius: 64px;\n    letter-spacing: 3px;\n    font-weight: 500;\n    font-size: ${FONT_SIZE.XLARGE};\n    text-align: center;\n    \n    color: ${COLORS.GRAY};\n    padding: 10px;\n    border: 5px solid ${COLORS.WASSERMANN}; \n    transition: 1s;\n    \n    ${SCREEN.BELOW_PHONE} {\n        &::placeholder {\n            font-size: ${FONT_SIZE.LARGE};\n        }\n        min-width: 0;\n        width: 60vw; \n    }\n    \n    &::placeholder {\n        font-weight: 500;\n        opacity: 0.2;\n    }\n    \n    &:invalid {\n        border-color: ${COLORS.UGLY_GREEN};\n    }\n`;\n\nconst Form = styled.form`\n    text-align: center; \n`;\n\nconst Indicators = styled.div`\n    // position: absolute; \n    // right: 50%;\n    // left: 50%; \n    display: flex;\n    align-items: center;\n    text-align: center; \n    justify-content: center;\n`;\n\nconst Circle = styled.circle`\n    fill: ${COLORS.WHITE};\n    transition: 1s;\n    \n    ${({disabled, active}) => {\n    return disabled && !active && css`\n        fill: ${COLORS.UGLY_GREEN}\n    `\n}}\n    \n    ${({active}) => active && css`\n        fill: ${COLORS.POISONOUS}\n    `}\n`\n\nconst IndicatorWrapper = styled.div`\n    margin: 10px;\n`\n\nconst IndicatorsWrapper = styled(MoveFromRight)`\n    width: 100vw;\n    bottom: 0;\n`\n\n\nconst Indicator = ({active, disabled}) => {\n    return <IndicatorWrapper>\n        <svg width=\"22px\" height=\"22px\" viewBox=\"0 0 22 22\">\n            <Circle cx=\"11\" cy=\"11\" r=\"8\" active={active} disabled={disabled}/>\n        </svg>\n    </IndicatorWrapper>\n}\n\nclass PlayerForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: null,\n            number: this.props.number,\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        if (event.target.name === \"name\" && this.state.name != null && event.target.value.length >= 10) {\n            this.setState({isLong: true})\n        } else {\n            this.setState({\n                [event.target.name]: event.target.value\n            });\n        }\n    }\n\n    render() {\n        const {name} = this.state;\n        return (\n            <FormSection number={this.state.number}>\n                <Subheading>{STRING.NAME_OF_PLAYER} {this.props.number}</Subheading>\n                <Form\n                    onSubmit={(e) => {\n                        this.props.onSubmit(this.state);\n                        e.preventDefault()\n                    }}>\n                    <TextField\n                        autoComplete={'off'}\n                        autocomplete=\"off\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this.handleInputChange}\n                        type=\"text\"\n                        placeholder={`Player ${this.props.number} name`}\n                        required/>\n                    <CustomButton disabled={this.state.name === null || this.state.name.length < 1}>Next</CustomButton>\n                </Form>\n            </FormSection>\n        );\n    }\n\n}\n\nexport const PlayerNames = ({count, onFinished}) => {\n    const [active, setActive] = useState(1);\n    const [players] = useState([]);\n    const forms = [];\n    const indicators = [];\n\n    const onSubmit = (value) => {\n        players[value.number] = new Player(value.name);\n        if (value.number < count) setActive(value.number + 1)\n        else if (value.number === count) onFinished && onFinished(players)\n    }\n\n    for (let i = 1; i <= count; i++) {\n        let disabled = players[i] === undefined || players[i].length === 0;\n        indicators.push(\n            <Indicator\n                active={active === i}\n                disabled={disabled}\n            />);\n        forms.push(<PlayerForm filled={i < active} number={i} active={active === i}\n                               onSubmit={(value) => onSubmit(value)}/>)\n    }\n    return <Container>\n        <MoveFromRight>\n            <FormContainer active={active}>\n                {forms}\n            </FormContainer>\n        </MoveFromRight>\n        <IndicatorsWrapper>\n            <Indicators>\n                {indicators}\n            </Indicators>\n        </IndicatorsWrapper>\n    </Container>\n};","import React from 'react';\nimport styled from 'styled-components'\nimport {MoveFromRight} from \"../visuals/Animations\";\nimport {Subheading} from \"../visuals/Heading\";\nimport {CustomButton} from \"../visuals/Button\";\nimport {PATH, SCREEN} from \"../../constant/Constants\";\nimport {Link} from \"react-router-dom\";\n\nconst Container = styled(MoveFromRight)`\n    text-align: center; \n    \n    > button {\n        margin: auto 30px;\n       \n        ${SCREEN.BELOW_PHONE} {\n            margin-bottom: 30px;\n        }\n    }\n`\n\nexport const GameType = () => {\n    return <section>\n        <Container>\n            <Subheading>Choose type of the game</Subheading>\n            <Link to={PATH.SINGLEPLAYER}>\n                <CustomButton>\n                    Single Player\n                </CustomButton>\n            </Link>\n            <Link to={PATH.MULTIPLAYER}>\n                <CustomButton>\n                    Multiplayer\n                </CustomButton>\n            </Link>\n        </Container>\n    </section>\n}","import React from 'react';\nimport styled from 'styled-components'\nimport {MoveFromRight} from \"../visuals/Animations\";\nimport {Subheading} from \"../visuals/Heading\";\nimport {CustomButton} from \"../visuals/Button\";\nimport {SCREEN, STORAGE} from \"../../constant/Constants\";\nimport {MultiplayerGame} from \"../../Game\";\n\nconst Container = styled(MoveFromRight)`\n    text-align: center; \n    \n    > button {\n        margin: auto 30px;\n        ${SCREEN.BELOW_PHONE} {\n            margin-bottom: 30px;\n        }\n    }\n`\n\nexport const MultiplayerLoad = ({onSelected}) => {\n    return <section>\n        <Container>\n            <Subheading>Choose type of the game</Subheading>\n            <CustomButton disabled={window.localStorage.getItem(STORAGE.MULTIPLAYER) === undefined || window.localStorage.getItem(STORAGE.MULTIPLAYER) === null}\n                          onClick={() => {\n                              console.log(window.localStorage.getItem(STORAGE.MULTIPLAYER));\n                              onSelected(MultiplayerGame.fromProps(\n                              JSON.parse(window.localStorage.getItem(STORAGE.MULTIPLAYER)))\n                          )}}\n            >\n                Load Game\n            </CustomButton>\n            <CustomButton onClick={() => onSelected(null)}>New Game</CustomButton>\n        </Container>\n    </section>\n}","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {PATH, SCREEN} from \"../../constant/Constants\";\nimport {Link, Route, Switch} from \"react-router-dom\";\n\nconst Container = styled.header`\n    text-align: center; \n    margin: 5px;\n    max-width: 100vw;\n    position: relative; \n    \n    ${SCREEN.BELOW_PHONE} {\n        max-width: 500px;\n        margin: auto;\n    }\n    \n    > img {\n        margin:auto;\n        max-width: 80%\n    }\n`;\n\nconst SmallLogo = styled.h1`\n    display: inline-block; \n    text-indent: -9999px;\n    margin: auto;\n    width: 401px; \n    height: 263px;\n    border: none;\n    background: url(\"img/logo_great.svg\");\n    cursor: pointer;\n    transition: 1s;\n    ${({collapsed}) => collapsed && css`\n        width: 134px;\n        height: 87px; \n        background: url(\"img/logo_small.svg\") no-repeat;\n        background-size: cover;\n    `}\n`\n\nconst BackButton = styled.nav`\n    position: absolute; \n    left: 0;\n    top: 25%; \n    bottom: 75%;\n    margin-left: 30px;\n    cursor: pointer; \n`\n\nconst AboutButton = styled.nav`\n    position: absolute; \n    right: 0;\n    top: 25%; \n    bottom: 75%;\n    margin-right: 30px;\n    cursor: pointer; \n`\n\nexport const Header = ({collapsed, onBack}) => {\n    const back = <BackButton onClick={() => {onBack()}}>\n        <img src=\"img/back.svg\" alt=\"Go back\"/>\n    </BackButton>\n    return <Container>\n        <Switch>\n            <Route path={(PATH.MULTIPLAYER)}>\n                {back}\n            </Route>\n            <Route path={(PATH.SINGLEPLAYER)}>\n                {back}\n            </Route>\n            <Route path={PATH.ABOUT}>\n                {back}\n            </Route>\n        </Switch>\n        <Link to={PATH.HOME}>\n            <SmallLogo collapsed={collapsed}>Memory Board Game</SmallLogo>\n        </Link>\n        <AboutButton>\n            <Link to={PATH.ABOUT}>\n                <img src=\"img/info.svg\"/>\n            </Link>\n        </AboutButton>\n\n    </Container>\n}","import React, {Component, useEffect, useState} from \"react\";\nimport axios from 'axios'\nimport {API, COLORS, FONT_SIZE} from \"../../constant/Constants\";\nimport styled from 'styled-components'\nimport {Header} from \"../layout/Header\";\nimport {Subheading} from \"../visuals/Heading\";\nimport {CustomButton} from \"../visuals/Button\";\n\nconst Container = styled.section`\n    text-align:center; \n`\n\nconst PersonalInfo = styled.div`\n    justify-content: center;\n    align-items: center;\n   \n    & > img {\n        margin-top: -10px; \n        width: 250px;\n        height: 250px;\n   }\n   \n   & > * {\n    color: ${COLORS.WHITE};\n    font-size: ${FONT_SIZE.LARGE};\n    margin: 15px;\n    \n    & > a {\n        color: ${COLORS.DARK_WASSERMANN}\n    }\n   }\n`\n\nconst ButtonWrapper = styled.div`\n    margin: 24px; \n`\n\nexport class About extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false,\n            user: null\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): boolean {\n        return nextState !== this.state\n    }\n\n    componentDidMount(): void {\n        axios.get(API.GITHUB_PATH).then((response) => {\n            this.setState({user: response.data})\n        }).catch((err) => console.error(err))\n    }\n\n    render() {\n\n        const clearStorage = () => {\n            if (window.confirm(\"Are you sure you want to delete storage?\")) window.localStorage.clear();\n        }\n\n        return <Container>\n            {this.state.user && <Subheading>The author</Subheading>}\n            {this.state.user && <PersonalInfo>\n                <img src={this.state.user.avatar_url}/>\n                <div>{this.state.user.name}</div>\n                <div><a href={this.state.user.html_url}>@{this.state.user.login}</a></div>\n\n            </PersonalInfo>}\n            <ButtonWrapper>\n                <CustomButton onClick={clearStorage}>Clear storage</CustomButton>\n            </ButtonWrapper>\n        </Container>\n    }\n}\n\nexport default About","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.footer`\n    width: 100vw;\n    height: 3em;\n    display: block;\n    text-align: center;\n    bottom: 0;\n`\n\nexport const Footer = () => {\n    return <Container>\n        (c) 2020\n    </Container>\n}\nexport default Footer","import React from \"react\";\nimport styled from 'styled-components';\nimport {Header} from \"./Header\";\nimport Footer from \"./Footer\";\nimport {HashRouter as Router} from \"react-router-dom\";\nimport {FadeIn} from \"../visuals/Animations\";\n\nconst Container = styled.div`\n    display: flex; \n    min-height: 100vh; \n    position: relative; \n    flex-direction: column;\n`\n\nconst Main = styled.main`\n   position: relative; \n   flex-grow: 1; \n`\n\nexport const Layout = ({children, collapsed}) => {\n    const header = <Header collapsed={collapsed ?? true} onBack={() => {\n        window.history.back();\n    }\n    }/>\n    return <Router basename=\"/\">\n        <Container>\n                <FadeIn>\n                    {header}\n                </FadeIn>\n            <Main>\n                {children}\n            </Main>\n            <Footer/>\n        </Container>\n    </Router>\n}\n\nexport default Layout","// https://stackoverflow.com/questions/3144711/find-the-time-left-in-a-settimeout/36389263#36389263\n\nexport const getTimeout = (function () { // IIFE\n    const _setTimeout = setTimeout, // Reference to the original setTimeout\n        map = {}; // Map of all timeouts with their start date and delay\n\n    setTimeout = function (callback, delay) { // Modify setTimeout\n        const id = _setTimeout(callback, delay); // Run the original, and store the id\n\n        map[id] = [Date.now(), delay]; // Store the start date and delay\n\n        return id; // Return the id\n    };\n\n    return function (id) { // The actual getTimeLeft function\n        const m = map[id]; // Find the timeout in map\n\n        // If there was no timeout with that id, return NaN, otherwise, return the time left clamped to 0\n        return m ? Math.max(m[1] - Date.now() + m[0], 0) : NaN;\n    }\n})();","import React from 'react';\nimport styled from 'styled-components'\nimport {MoveFromRight} from \"../visuals/Animations\";\nimport {Subheading} from \"../visuals/Heading\";\nimport {CustomButton} from \"../visuals/Button\";\nimport {SCREEN, STORAGE} from \"../../constant/Constants\";\nimport {SinglePlayerGame} from \"../../Game\";\nimport saveAs from 'file-saver';\n\nconst Container = styled(MoveFromRight)`\n    text-align: center; \n    \n    > button {\n        ${SCREEN.BELOW_PHONE} {\n            margin-bottom: 30px;\n        }\n    }\n`\n\nexport const SingleplayerLoad = ({onSelected}) => {\n\n    async function importGame(){\n        let file = await selectFile();\n        const reader = new FileReader();\n        reader.readAsText(file,'UTF-8');\n\n        reader.onload = readerEvent => {\n            onSelected(SinglePlayerGame.fromProps(JSON.parse(readerEvent.target.result)));\n        }\n    }\n\n    function selectFile (){\n        return new Promise(resolve => {\n            let input = document.createElement('input');\n            input.type = 'file';\n            input.multiple = false;\n            input.accept = \".json\";\n\n            input.onchange = _ => {\n                let files = Array.from(input.files);\n                resolve(files[0]);\n            };\n\n            input.click();\n        });\n    }\n\n    const exportGame = () => {\n        saveAs(\n            new Blob(\n                [window.localStorage.getItem(STORAGE.SINGLEPLAYER)],\n                {type: \"application/json;charset=utf-8\"}),\n            `memory${Date.now().toString()}.json`\n        )\n    }\n\n    const isSingleplayerInStorage = window.localStorage.getItem(STORAGE.SINGLEPLAYER) !== undefined && window.localStorage.getItem(STORAGE.SINGLEPLAYER) !== null\n    return <section>\n        <Container>\n            <form>\n                <Subheading>Choose type of the game</Subheading>\n                <CustomButton disabled={!isSingleplayerInStorage}\n                              onClick={() => {\n                                  console.log(window.localStorage.getItem(STORAGE.SINGLEPLAYER));\n                                  onSelected(SinglePlayerGame.fromProps(\n                                      JSON.parse(window.localStorage.getItem(STORAGE.SINGLEPLAYER)))\n                                  )\n                              }}\n                >\n                    Load Game\n                </CustomButton>\n                <CustomButton disabled={!isSingleplayerInStorage} onClick={() => exportGame()}>Export game</CustomButton>\n                <br/>\n                <CustomButton onClick={() => importGame()}>Import game</CustomButton>\n                <CustomButton onClick={() => onSelected(null)}>New Game</CustomButton>\n            </form>\n        </Container>\n    </section>\n}","import {Component} from \"react\";\nimport {MultiplayerLoad} from \"../settings/MultiplayerLoad\";\nimport {PlayerCount} from \"../settings/PlayerCount\";\nimport {PlayerNames} from \"../settings/PlayerNames\";\nimport {MultiplayerGame} from \"../../Game\";\nimport {PlayerBar} from \"../game/PlayerBar\";\nimport {Playground} from \"../game/Playground\";\nimport React from \"react\";\nimport {isWelcome, saveMultiplayer, welcome} from \"../../App\";\n\nexport class Multiplayer extends Component {\n    // start new game\n    initGame (players){\n        const game = new MultiplayerGame(16, players)\n        this.setState({game: game})\n        saveMultiplayer(game)\n    }\n\n    constructor(props) {\n        super(props);\n        if (!isWelcome()) welcome();\n        console.log(\"Multiplayer constructor\");\n        this.state = {\n            game: null,\n            welcome: isWelcome(),\n            playerCount: false,\n            activeCard: null\n        };\n    }\n\n    componentWillUnmount(): void {\n        if (this.state.game !== null) saveMultiplayer(this.state.game)\n    }\n\n    render() {\n        return <>\n            {!this.state.loaded &&\n            <MultiplayerLoad onSelected={(game) => {\n                this.setState({loaded: true});\n                if (game === null) {\n                    this.setState({playerCount: 0})\n                }\n                this.setState({game: game})\n            }}/>\n            }\n            {this.state.loaded && this.state.playerCount === 0 &&\n            <PlayerCount onFinished={(playerCount) => this.setState({playerCount: playerCount})}/>\n            }\n            {this.state.loaded && this.state.playerCount > 0 && !this.state.game && <>\n                <PlayerNames count={this.state.playerCount} onFinished={players => this.initGame(players)}/></>}\n            {this.state.loaded && this.state.game && this.state.game.players && <>\n                {this.state.game instanceof MultiplayerGame && <PlayerBar game={this.state.game}/>}\n                <Playground game={this.state.game}/>\n            </>}\n        </>\n    }\n}","import {Component} from \"react\";\nimport {SingleplayerLoad} from \"../settings/SingleplayerLoad\";\nimport {SinglePlayerGame} from \"../../Game\";\nimport {Playground} from \"../game/Playground\";\nimport React from \"react\";\nimport {saveSingleplayer} from \"../../App\";\n\nexport class Singleplayer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            game: null,\n            loaded: false,\n        }\n    }\n\n    componentWillUnmount(): void {\n        console.log(this.state.game);\n        if (this.state.game !== null) saveSingleplayer(this.state.game)\n    }\n\n    render() {\n        const onSelected = (game) => {\n            const g = game === null ? new SinglePlayerGame(16) : game;\n            this.setState({loaded: true, game: g});\n            saveSingleplayer(g);\n        }\n\n        return <>{!this.state.loaded && <SingleplayerLoad onSelected={(game) => {\n            onSelected(game)\n        }}/>}\n            {this.state.loaded &&\n            <Playground game={this.state.game}/>\n            } </>;\n    }\n\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {MultiplayerGame, SinglePlayerGame} from \"./Game\";\nimport {Playground} from \"./component/game/Playground\";\nimport {PlayerBar} from \"./component/game/PlayerBar\";\nimport {WelcomeScreen} from \"./component/pages/WelcomeScreen\";\nimport {PlayerCount} from \"./component/settings/PlayerCount\";\nimport {PlayerNames} from \"./component/settings/PlayerNames\";\nimport {GameType} from \"./component/settings/GameType\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {HASH, PATH, STORAGE} from \"./constant/Constants\";\nimport {MultiplayerLoad} from \"./component/settings/MultiplayerLoad\";\nimport About from \"./component/pages/About\";\nimport Layout from \"./component/layout/Layout\";\nimport {getTimeout} from \"./util/TimeoutUtil\";\nimport {SingleplayerLoad} from \"./component/settings/SingleplayerLoad\";\nimport {Multiplayer} from \"./component/pages/Multiplayer\";\nimport {Singleplayer} from \"./component/pages/Singleplayer\";\n\nexport function saveMultiplayer(game) {\n    saveGame(game, STORAGE.MULTIPLAYER)\n}\n\nexport function saveSingleplayer(game) {\n    saveGame(game, STORAGE.SINGLEPLAYER)\n}\n\nexport function saveGame(game, key) {\n    console.log(\"saving game\", game);\n    if (game !== null) {\n        for (const card of game.cards) {\n            if (card.timeout !== null) {\n                card.remainining = getTimeout(card.timeout);\n                clearTimeout(card.timeout)\n            }\n        }\n    }\n\n    console.log(game)\n    if (game !== null) window.localStorage.setItem(key, JSON.stringify(game))\n    else window.localStorage.removeItem(key)\n}\n\nexport function isWelcome() {\n    if (JSON.parse(window.localStorage.getItem(STORAGE.WELCOME)) === null || JSON.parse(window.localStorage.getItem(STORAGE.WELCOME)).welcome === null) return false;\n    return JSON.parse(window.localStorage.getItem(STORAGE.WELCOME)).welcome\n}\n\nexport function welcome() {\n    window.localStorage.setItem(STORAGE.WELCOME, JSON.stringify({welcome: true}));\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            game: null,\n            welcome: isWelcome(),\n            collapsed: false,\n            playerCount: false,\n            loaded: false,\n            activeCard: null\n        };\n    }\n\n    render() {\n        const finishWelcomeScreen = () => {\n            this.setState({collapsed: true});\n\n            setTimeout(() => {\n                welcome();\n                this.setState({welcome: JSON.parse(window.localStorage.getItem(STORAGE.WELCOME)).welcome});\n                console.log(JSON.parse(window.localStorage.getItem(STORAGE.WELCOME)).welcome)\n            }, 1000)\n        };\n\n        return (\n            <Layout collapsed={this.state.collapsed || this.state.welcome || window.location.hash !== HASH.HOME}\n                    shouldFadeIn={!this.state.welcome}>\n                <Switch>\n                    <Route path={PATH.MULTIPLAYER}>\n                        <Multiplayer/>\n                    </Route>\n                    <Route path={PATH.SINGLEPLAYER}>\n                        <Singleplayer/>\n                    </Route>\n                    <Route path={PATH.ABOUT}>\n                        <About/>\n                    </Route>\n                    <Route path={PATH.HOME}>\n                        {!this.state.welcome && <>\n                            <WelcomeScreen onFinished={() => {\n                                finishWelcomeScreen()\n                            }}/>\n                        </>}\n                        {\n                            this.state.welcome && <GameType/>\n                        }\n                    </Route>\n                </Switch>\n            </Layout>\n        )\n            ;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}