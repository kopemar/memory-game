{"version":3,"sources":["constant/Constants.js","Game.js","context/AppContext.js","component/game/CardView.js","component/game/Playground.js","component/Header.js","component/game/PlayerBar.js","component/Button.js","component/FadeIn.js","component/Heading.js","component/WelcomeScreen.js","component/settings/PlayerNumber.js","component/settings/PlayerCount.js","component/settings/PlayerNames.js","App.js","serviceWorker.js","index.js"],"names":["COLORS","FONT_SIZE","SCREEN","STRING","REJECT_ANIMATION","css","delay","duration","Game","count","players","isWon","discovered","console","log","this","cards","i","j","push","Card","activeCard","shuffle","error","counter","length","index","Math","floor","random","temp","number","src","image","active","id","getId","timeout","card","valueEquals","isTheSame","hasOwnProperty","0","1","2","3","4","5","6","7","Player","name","score","AppContext","createContext","cCard","setCCard","welcome","setWelcome","setPlayers","GlobalContext","children","useState","setCard","setWWelcome","setPPlayers","Provider","value","Container","styled","div","Inner","g","FlipCard","Back","rect","fill","Front","CardView","clickHandler","timeoutHandler","setActive","setDiscovered","useContext","onClick","pairsWith","clearTimeout","setTimeout","viewBox","x1","y1","x2","y2","stopColor","offset","patternUnits","width","height","href","x","y","size","PlaygroundContainer","main","Playground","game","forEach","alert","handleCardClick","handleTimeout","header","SmallLogo","h1","collapsed","Header","PlayerField","PlayerName","Indicator","PlayerBar","activePlayer","fields","player","StyledButton","button","disabled","CustomButton","type","event","FadeIn","MoveFromRight","Subheading","h2","finished","WelcomeScreen","onFinished","setFinished","Wrapper","enabled","PlayerNumber","onSelect","shouldMove","Numbers","PlayerCount","setShouldMove","playerCount","setPlayerCount","onSelected","numbers","FormContainer","FormSection","section","TextField","input","Form","form","Indicators","Circle","circle","IndicatorWrapper","IndicatorsWrapper","cx","cy","r","PlayerForm","props","state","handleInputChange","bind","target","isLong","setState","onSubmit","e","preventDefault","autoComplete","autocomplete","onChange","placeholder","required","Component","PlayerNames","forms","indicators","undefined","filled","App","setGame","setCollapsed","initGame","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.913e8f78.chunk.js","sourcesContent":["import {css} from 'styled-components'\n\nexport const COLORS = {\n    WASSERMANN: \"#6AA331\",\n    LIGHT_WASSERMANN: \"#ACD87E\",\n    DARK_WASSERMANN: \"#4a7524\",\n    GREEN_AGAIN: \"#7AB341\",\n    POISON: \"#B8FF2C\",\n    POISONOUS: \"#A0FF4F\",\n    YELLOW_GREEN: \"#D8D365\",\n    ANOTHER_GREEN: \"#B0DD70\",\n    GRAY_BUT_GREEN: \"#9CAF8C\",\n    UGLY_GREEN: \"#B7C59C\",\n    SILLY_GREEN: \"#96E6A1\",\n    GREEN: \"#93D559\",\n    TURQUOISE: \"#1AD7E4\",\n    BARBIE: \"#E41ABB\",\n    VIOLETTE: \"#7C7BC1\",\n    COMMIE: \"#C90000\",\n    DEEP_PURPLE: \"#482666\",\n    JUST_GOLD: \"#FFD100\",\n    MARINE: \"#12407B\",\n    ORANGE: \"#FF6200\",\n    WHITE: \"#FFFFFF\",\n    WHITE_TRANSPARENT: \"rgb(255, 255, 255, 50)\",\n    GRAY: \"#BCBDBC\"\n}\n\nexport const FONT_SIZE = {\n    XLARGE: \"36px\",\n    LARGE: \"24px\"\n}\n\nexport const SCREEN = {\n    ABOVE_TABLET: \"@media (min-width: 1000px)\",\n    BELOW_PHONE: \"@media (max-width: 700px)\"\n}\n\nexport const STRING = {\n    WELCOME_TEXT: \"Hello and welcome to the memory game!\",\n    NUMBER_OF_PLAYERS: \"Select number of players\",\n    NAME_OF_PLAYER: \"Insert name of Player\"\n}\n\nexport const MAX_PLAYER_COUNT = 4;\nexport const MIN_PLAYER_COUNT = 2;\n\nexport const REJECT_ANIMATION = css`\n            @keyframes reject {\n                0% {transform: translateX(15px);}\n                50% {transform: translateX(-15px);}\n                100% {transform: translateX(0px)}\n            }\n            animation-name: reject;\n            animation-delay: ${({delay}) => delay ? delay : 0}s;\n            animation-duration: ${({duration}) => duration ? duration : 0.5}s;\n            animation-fill-mode: forwards;\n            `","import {COLORS} from \"./constant/Constants\";\n\nexport class Game {\n\n    constructor(count, players) {\n        console.log(\"Game constructor\")\n        this.count = count;\n        this.players = players;\n        if (count % 2 === 0) {\n            this.cards = [];\n            for (let i = 0; i < count/2; i++) {\n               for (let j = 0; j < 2; j++) {\n                   this.cards.push(new Card(i))\n               }\n            }\n            this.activeCard = null;\n            this.discovered = 0;\n            this.shuffle()\n        } else {\n            console.error(\"Not even number of cards\")\n        }\n        console.log(this)\n    }\n\n    isWon = () => this.count === this.discovered;\n\n    shuffle() {\n        let counter = this.cards.length;\n\n        // shuffle algorithm from https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\n        while (counter > 0) {\n            const index = Math.floor(Math.random() * counter);\n\n            counter--;\n            const temp = this.cards[counter];\n            this.cards[counter] = this.cards[index];\n            this.cards[index] = temp;\n        }\n    }\n}\n\nexport class Card {\n    constructor(number) {\n        console.log(\"card constructor\")\n        this.number = number;\n        this.src = Card.image[number];\n        this.active = false;\n        this.id = Card.getId();\n        this.discovered = false;\n        this.timeout = null;\n    }\n\n    isTheSame(card) {\n        return this.valueEquals(card) && this.id === card.id;\n    }\n\n    pairsWith (card) {\n        return this.valueEquals(card) && !this.isTheSame(card);\n    }\n\n    valueEquals (card) {\n        if (card === null) return this === null;\n        if (card.hasOwnProperty(\"number\")) {\n            return card.number === this.number\n        }\n        return false\n    }\n\n    static counter = 0;\n\n    static getId = () => {\n        return Card.counter++;\n    }\n\n    static image = {\n        0: `${COLORS.ORANGE}`,\n        1: `${COLORS.BARBIE}`,\n        2: `${COLORS.COMMIE}`,\n        3: `${COLORS.DEEP_PURPLE}`,\n        4: `${COLORS.JUST_GOLD}`,\n        5: `${COLORS.TURQUOISE}`,\n        6: `${COLORS.MARINE}`,\n        7: `${COLORS.POISON}`,\n    }\n}\n\nexport class Player {\n    constructor(name) {\n        this.name = name;\n        this.score = 0;\n    }\n}","import React, {createContext, useState} from 'react';\n\nexport const AppContext = createContext({\n        cCard: null,\n        setCCard: cCard => cCard,\n        welcome: false,\n        setWelcome: welcome => welcome,\n        players: [],\n        setPlayers: players => players,\n    }\n)\n\nexport const GlobalContext = ({children}) => {\n    const [cCard, setCard] = useState(null);\n    const [welcome, setWWelcome] = useState(false);\n    const [players, setPPlayers] = useState([])\n\n    const setCCard = cCard => setCard(cCard);\n\n    const setWelcome = welcome => setWWelcome(welcome);\n\n    const setPlayers = players => setPPlayers(players);\n\n    return (\n        <AppContext.Provider\n            value={{\n                cCard,\n                setCCard,\n                welcome,\n                setWelcome,\n                players,\n                setPlayers\n            }}\n        >\n            {children}\n        </AppContext.Provider>\n    )\n}","import React, {useContext, useState} from 'react';\nimport styled, {css} from 'styled-components';\nimport {COLORS} from \"../../constant/Constants\";\nimport {AppContext} from \"../../context/AppContext\";\n\nconst Container = styled.div`\n    box-sizing: border-box;\n    width: 25%;\n    padding: 10px;\n    border-radius: 10px;\n    perspective: 1000px;\n`;\n\nconst Inner = styled.g`\n    position: relative;\n    fill: transparent;\n    transition: transform 0.6s;\n    transform-style: preserve-3d;\n    text-align: center;\n    ${({active}) => active && css`transform: rotateY(180deg);`}\n`\n\nconst FlipCard = styled.g`\n    perspective: 1000px;\n    position: relative; \n`\n\n\nconst Back = styled.rect`\n    width: 100%;\n    height: 100%;\n    rx: 10;\n    fill: url(${({fill}) => fill});\n    stroke: ${({active}) => active ? COLORS.DARK_WASSERMANN : COLORS.WASSERMANN}; \n    position: absolute;\n    backface-visibility: hidden;\n    \n    &:hover {\n        stroke: ${COLORS.DARK_WASSERMANN}\n    }\n`\n\nconst Front = styled.rect`\n    width: 100%;\n    height: 100%;\n    rx: 10;\n    fill: ${({src}) => src};\n    stroke: ${({active}) => !active ? COLORS.DARK_WASSERMANN : COLORS.WASSERMANN}; \n    position: absolute;\n    backface-visibility: hidden;\n    transform: rotateY(180deg);\n`\n\nexport const CardView = ({card, clickHandler, timeoutHandler}) => {\n    const [active, setActive] = useState(card.active);\n    const [discovered, setDiscovered] = useState(false)\n    const {cCard} = useContext(AppContext);\n\n    const getSelector = (id) => {\n        return `#${id}`\n    }\n\n    const viewBoxSize = 160;\n    const gradientId = \"green_linear_gradient\";\n\n    const handleClick = () => {\n        clickHandler(card)\n        setActive(true);\n\n        if (card.pairsWith(cCard)) {\n            console.log(\"clearing timeout\")\n            clearTimeout(cCard.timeout);\n        }\n\n        setTimeout(() => {\n            setActive(card.active)\n            if (!discovered) setDiscovered(card.discovered)\n        }, 500)\n\n        card.timeout = setTimeout(() => {\n            setActive(card.discovered)\n            timeoutHandler(card)\n        }, 1500);\n\n        console.log(card)\n    }\n\n    return (\n        <Container onClick={() => {if (!card.discovered) handleClick()}}>\n            <svg viewBox={`0 0 ${viewBoxSize} ${viewBoxSize}`}>\n                <defs>\n                    <linearGradient x1=\"50%\" y1=\"0%\" x2=\"50%\" y2=\"100%\" id={gradientId}>\n                        <stop stopColor={COLORS.LIGHT_WASSERMANN} offset=\"0%\"/>\n                        <stop stopColor={COLORS.GREEN_AGAIN} offset=\"100%\"/>\n                    </linearGradient>\n\n                    <pattern id=\"img1\" patternUnits=\"userSpaceOnUse\" width=\"100\" height=\"100\">\n                        <image href=\"wall.jpg\" x=\"0\" y=\"0\" width=\"100\" height=\"100\"/>\n                    </pattern>\n                </defs>\n                <FlipCard>\n                    <Inner active={card.isTheSame(cCard) || active || discovered} size={viewBoxSize}>\n                        <Back active={card.isTheSame(cCard) || active || discovered} fill={getSelector(gradientId)} id=\"card_bg_rectangle\"/>\n                        <Front active={card.isTheSame(cCard) || active || discovered} src={card.src} fill=\"#img1\"/>\n                    </Inner>\n                </FlipCard>\n            </svg>\n        </Container>\n    )\n}","import React, {useContext} from 'react';\nimport styled from 'styled-components';\nimport {CardView} from \"./CardView\";\nimport {AppContext} from \"../../context/AppContext\";\nimport {COLORS} from \"../../constant/Constants\";\n\nconst PlaygroundContainer = styled.main`\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 700px;\n    padding: 10px;\n    background: ${COLORS.WHITE};\n    border-radius: 4px;\n    border: 1px solid ${COLORS.GRAY_BUT_GREEN};\n    margin: 10px;\n`;\n\n\nexport const Playground = ({game}) => {\n    const cards = [];\n\n    const {setCCard} = useContext(AppContext);\n\n    game.cards.forEach((card) => {\n        cards.push(<CardView clickHandler={(card) => handleCardClick(card)} card={card}\n                             timeoutHandler={(card) => handleTimeout(card)}/>)\n    })\n\n    const handleTimeout = (card) => {\n        console.log(\"TIMEOUT\", card)\n        if (!card.discovered) {\n            card.active = false;\n        }\n        setCCard(null);\n        game.activeCard = null;\n\n    }\n\n    function handleCardClick(card) {\n        card.active = true;\n        console.log(game);\n        // no card active\n        if (game.activeCard === null) {\n            game.activeCard = card;\n            setCCard(card);\n        } else {\n            if (game.activeCard.pairsWith(card)) {\n                console.log(\"Match!\");\n                if (!card.discovered && game.activeCard.discovered) game.discovered += 2;\n                game.activeCard.discovered = true;\n                card.discovered = true;\n            } else {\n                game.activeCard.active = false;\n                card.active = false;\n            }\n            game.activeCard = null;\n            setCCard(null)\n        }\n        console.log(game);\n\n        if (game.isWon()) {\n            console.log(\"YOU WON!\")\n            alert(\"You won!\")\n        }\n    }\n\n    return <PlaygroundContainer>\n        {cards}\n    </PlaygroundContainer>\n};","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {SCREEN} from \"../constant/Constants\";\n\nconst Container = styled.header`\n    text-align: center; \n    margin: 5px;\n    max-width: 100vw;\n    \n    ${SCREEN.BELOW_PHONE} {\n        max-width: 500px;\n        margin: auto;\n    }\n    \n    > img {\n        margin:auto;\n        max-width: 80%\n    }\n`;\n\nconst SmallLogo = styled.h1`\n    text-indent: -9999px;\n    margin: auto;\n    width: 401px; \n    height: 263px;\n    border: none;\n    background: url(\"img/logo_great.svg\");\n    transition: 1s;\n    ${({collapsed}) => collapsed && css`\n        width: 134px;\n        height: 87px; \n        background: url(\"img/logo_small.svg\") no-repeat;\n        background-size: cover;\n    `}\n`\n\nexport const Header = ({collapsed}) => {\n    return <Container>\n        <SmallLogo collapsed={collapsed}>\n            Memory Board Game\n        </SmallLogo>\n\n    </Container>\n}","import React, {useState} from 'react';\nimport styled, {css} from 'styled-components';\nimport {COLORS, FONT_SIZE, SCREEN} from \"../../constant/Constants\";\n\nconst Container = styled.div`\n    position: relative;\n    display: flex;\n    background: ${COLORS.WHITE}; \n    min-height: 100px;\n    ${SCREEN.ABOVE_TABLET} {\n        padding: 6px 200px;\n    }\n    ${SCREEN.BELOW_PHONE} {\n        flex-direction: column; \n        padding: 20px;\n    }\n`;\n\nconst PlayerField = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    text-align: center\n    ${SCREEN.BELOW_PHONE} {\n        position: absolute;\n    }\n`\n\nconst PlayerName = styled.div`\n    height: 0;\n    flex-grow: 1; \n    text-transform: uppercase;\n    padding: 20px;\n    font-size: ${FONT_SIZE.XLARGE};\n    color: ${({active}) => active? COLORS.SILLY_GREEN : COLORS.GRAY};\n    \n    ${SCREEN.BELOW_PHONE} {\n        padding: 5px;\n        font-size: ${FONT_SIZE.LARGE};\n    }\n`\n\nconst Indicator = styled.div`\n    background: ${COLORS.SILLY_GREEN};\n    position: absolute;\n    height: 10px;\n    width: 100%;\n    right: 0;\n    bottom: 0;\n    margin-bottom: 4px;\n`\n\nexport const PlayerBar = ({players}) => {\n    console.log(players);\n    const [activePlayer, setActivePlayer] = useState(players[1])\n    const fields = [];\n\n    for (let i = 1; i <= players.length; i++) {\n        const player = players[i];\n        player && fields.push(<PlayerField><PlayerName active={player === activePlayer}>{player.name}</PlayerName></PlayerField>)\n    }\n\n    return <Container>\n        {fields}\n        <Indicator/>\n    </Container>\n}","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {COLORS, FONT_SIZE, REJECT_ANIMATION, SCREEN} from \"../constant/Constants\";\n\nconst StyledButton = styled.button`\n    border: none; \n    height: 64px;\n    background-image: linear-gradient(to bottom , ${COLORS.POISON}, ${COLORS.POISONOUS});\n    min-width: 300px;\n    border-radius: 64px;\n    font-size: ${FONT_SIZE.LARGE};\n    color: ${COLORS.WHITE};\n    text-transform: uppercase;\n    font-family: 'Raleway', sans-serif;\n    opacity: 0.5; \n    transition: 1s; \n    cursor: pointer; \n    \n    ${SCREEN.BELOW_PHONE} {\n        min-width: 0;\n        width: 60vw; \n        opacity: 1;\n    }\n    \n    :hover {\n        opacity: 1;\n    }\n    \n    ${({disabled}) => disabled && css`\n        background-image: linear-gradient(to bottom , ${COLORS.GRAY_BUT_GREEN}, ${COLORS.UGLY_GREEN});\n        cursor: not-allowed; \n        \n        &:hover {\n            opacity: 0.5;\n            ${REJECT_ANIMATION}\n        }\n    `}\n`\n\nexport const CustomButton = ({children, onClick, disabled}) => {\n    return <StyledButton disabled={disabled} type=\"submit\" onClick={(event) => {if (!disabled && onClick) onClick(event)}}>{children}</StyledButton>\n}","import styled from \"styled-components\";\n\nexport const FadeIn = styled.div`\n    @keyframes fade-in {\n        from {opacity: 0;}\n        to {opacity: 1;}\n    }\n    animation-name: fade-in;\n    opacity: 0;\n    animation-delay: ${({delay}) => delay ? delay : 0}s;\n    animation-duration: ${({duration}) => duration ? duration : 2}s;\n    animation-fill-mode: forwards;\n`;\n\nexport const MoveFromRight = styled.div`\n    @keyframes move-from-right {\n        from {transform: translateX(100%);}\n        to {transform: translateX(0%);}\n    }\n    animation-name: move-from-right;\n    transform: translateX(100%)\n    animation-delay: ${({delay}) => delay ? delay : 0}s;\n    animation-duration: ${({duration}) => duration ? duration : 2}s;\n    animation-fill-mode: forwards;\n`","import styled from \"styled-components\";\nimport {COLORS, FONT_SIZE, SCREEN} from \"../constant/Constants\";\n\nexport const Subheading = styled.h2`\n    margin: 50px;\n    color: ${COLORS.WHITE}; \n    font-size: ${FONT_SIZE.XLARGE};\n    font-weight: 500;\n    text-align: center;\n    \n    ${SCREEN.BELOW_PHONE} {\n        font-size: ${FONT_SIZE.LARGE};\n    }\n`","import React, {useState} from 'react'\nimport styled, {css} from \"styled-components\";\nimport {STRING} from \"../constant/Constants\";\nimport {CustomButton} from \"./Button\";\nimport {FadeIn} from \"./FadeIn\";\nimport {Subheading} from \"./Heading\";\n\nconst Container = styled.main`\n    max-width: 100%;\n    text-align: center;\n    transition: 1s;\n    \n    ${({finished}) => finished && css`\n        transform: translateX(-100%);\n    `}\n`\n\nexport const WelcomeScreen = ({onFinished}) => {\n    const [finished, setFinished] = useState(false);\n\n    const finish = () => {\n        setFinished(true)\n        onFinished()\n    }\n\n    return <Container finished={finished}>\n        <FadeIn delay={1}>\n            <Subheading>{STRING.WELCOME_TEXT}</Subheading>\n        </FadeIn>\n        <FadeIn delay={2}>\n            <CustomButton onClick={() => finish()}>Next</CustomButton>\n        </FadeIn>\n    </Container>\n}","import React from 'react';\nimport styled, {css} from 'styled-components'\nimport {COLORS, FONT_SIZE} from \"../../constant/Constants\";\n\nconst Wrapper = styled.div`\n    margin: 10px;\n    width: 136px;\n    height: 168px;\n    border-radius: 60px; \n    text-align: center;\n    background: ${COLORS.GRAY_BUT_GREEN};\n    color: ${COLORS.WHITE};\n    font-size: ${FONT_SIZE.XLARGE};\n    \n    &, >p {\n        transition: 2s;\n    }\n    \n    > p {\n        opacity: 0.5;\n        height: 20%;\n        padding: 40%;\n    }\n    \n    &:hover {\n        > p {\n            opacity: 1;\n        }\n        background: ${COLORS.GREEN};\n    }\n    \n    ${({enabled}) => enabled && css`\n        > p {\n            opacity: 1;\n        }\n        background: ${COLORS.GREEN};\n        border: 3px solid ${COLORS.DARK_WASSERMANN}\n    `}\n`;\n\nexport const PlayerNumber = ({value, onSelect, enabled}) => {\n    return <Wrapper onClick={()=> onSelect(value)} enabled={enabled}>\n        <p>{value}</p>\n    </Wrapper>\n}","import React, {useState} from 'react'\nimport styled, {css} from 'styled-components'\nimport {Subheading} from \"../Heading\";\nimport {MAX_PLAYER_COUNT, MIN_PLAYER_COUNT, STRING} from \"../../constant/Constants\";\nimport {PlayerNumber} from \"./PlayerNumber\";\nimport {CustomButton} from \"../Button\";\n\nconst Container = styled.main`\n    transform: translateX(100%);\n    transition: 1s; \n    text-align: center;\n    ${({shouldMove}) => shouldMove && css`\n        transform: translateX(0%);\n    `}\n`;\n\nconst Numbers = styled.div`\n    width: 100%;\n    display: flex;\n    margin: auto;\n    justify-content: center;\n`\n\nexport const PlayerCount = ({onFinished}) => {\n    const [shouldMove, setShouldMove] = useState(false);\n    const [playerCount, setPlayerCount] = useState(0)\n\n    const onSelected = (value) => {\n        setPlayerCount(value);\n    };\n\n    const numbers = [];\n    for (let i = MIN_PLAYER_COUNT; i <= MAX_PLAYER_COUNT; i++) {\n        numbers.push(<PlayerNumber value={i} enabled={playerCount === i} onSelect={(value) => onSelected(value)}/>)\n    }\n\n    setTimeout(() => setShouldMove(true), 100)\n    return <Container shouldMove={shouldMove}>\n        <Subheading>{STRING.NUMBER_OF_PLAYERS}</Subheading>\n        <Numbers>\n            {numbers}\n        </Numbers>\n        <CustomButton disabled={playerCount === 0} onClick={()=> {onFinished(playerCount)}}>Next</CustomButton>\n    </Container>\n}","import React, {useState, Component} from 'react'\nimport styled, {css} from 'styled-components';\nimport {Subheading} from \"../Heading\";\nimport {COLORS, FONT_SIZE, SCREEN, STRING} from \"../../constant/Constants\";\nimport {CustomButton} from \"../Button\";\nimport {MoveFromRight} from \"../FadeIn\";\nimport {Player} from \"../../Game\";\n\nconst Container = styled.div`\n    \n`\n\nconst FormContainer = styled.main`\n    width: 100vw;\n    \n    ${({active}) => active && css`\n        transform: translateX(-${(active - 1) * 100}%);\n    `}\n    transition: 2s; \n`;\n\nconst FormSection = styled.section`\n    width: 100vw;\n    display: inline-block;\n    position: absolute; \n    \n    ${({number}) => number && css`\n        left: ${(number - 1) * 100}%;\n    `}\n`\n\nconst TextField = styled.input`\n    display: block; \n    margin:  0 auto 64px;    \n    height: 64px;\n    min-width: 300px;\n    border-radius: 64px;\n    letter-spacing: 3px;\n    font-weight: 500;\n    font-size: ${FONT_SIZE.XLARGE};\n    text-align: center;\n    \n    color: ${COLORS.GRAY};\n    padding: 10px;\n    border: 5px solid ${COLORS.WASSERMANN}; \n    transition: 1s;\n    \n    ${SCREEN.BELOW_PHONE} {\n        &::placeholder {\n            font-size: ${FONT_SIZE.LARGE};\n        }\n        min-width: 0;\n        width: 60vw; \n    }\n    \n    &::placeholder {\n        font-weight: 500;\n        opacity: 0.2;\n    }\n    \n    &:invalid {\n        border-color: ${COLORS.UGLY_GREEN};\n    }\n`;\n\nconst Form = styled.form`\n    text-align: center; \n`;\n\nconst Indicators = styled.div`\n    // position: absolute; \n    // right: 50%;\n    // left: 50%; \n    display: flex;\n    align-items: center;\n    text-align: center; \n    justify-content: center;\n`;\n\nconst Circle = styled.circle`\n    fill: ${COLORS.WHITE};\n    transition: 1s;\n    \n    ${({disabled, active}) => {\n    return disabled && !active && css`\n        fill: ${COLORS.UGLY_GREEN}\n    `\n}}\n    \n    ${({active}) => active && css`\n        fill: ${COLORS.POISONOUS}\n    `}\n`\n\nconst IndicatorWrapper = styled.div`\n    margin: 10px;\n`\n\nconst IndicatorsWrapper = styled(MoveFromRight)`\n    width: 100vw;\n    position: absolute; \n    bottom: 0;\n`\n\n\nconst Indicator = ({active, disabled}) => {\n    return <IndicatorWrapper>\n        <svg width=\"22px\" height=\"22px\" viewBox=\"0 0 22 22\">\n            <Circle cx=\"11\" cy=\"11\" r=\"8\" active={active} disabled={disabled}/>\n        </svg>\n    </IndicatorWrapper>\n}\n\nclass PlayerForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: null,\n            number: this.props.number,\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        if (event.target.name === \"name\" && this.state.name != null && event.target.value.length >= 10) {\n            this.state.isLong = true;\n        } else {\n            this.setState({\n                [event.target.name]: event.target.value\n            });\n        }\n    }\n\n    render() {\n        const {name} = this.state;\n        return (\n            <FormSection number={this.state.number}>\n                <Subheading>{STRING.NAME_OF_PLAYER} {this.props.number}</Subheading>\n                <Form\n                    onSubmit={(e) => {\n                        this.props.onSubmit(this.state);\n                        e.preventDefault()\n                    }}>\n                    <TextField\n                        autoComplete={'off'}\n                        autocomplete=\"off\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this.handleInputChange}\n                        type=\"text\"\n                        placeholder={`Player ${this.props.number} name`}\n                        required/>\n                    <CustomButton disabled={this.state.name === null || this.state.name.length < 1}>Next</CustomButton>\n                </Form>\n            </FormSection>\n        );\n    }\n\n}\n\nexport const PlayerNames = ({count, onFinished}) => {\n    const [active, setActive] = useState(1);\n    const [players] = useState([]);\n    const forms = [];\n    const indicators = [];\n\n    const onSubmit = (value) => {\n        players[value.number] = new Player(value.name);\n        if (value.number < count) setActive(value.number + 1)\n        else if (value.number === count) onFinished && onFinished(players)\n    }\n\n    for (let i = 1; i <= count; i++) {\n        let disabled = players[i] === undefined || players[i].length === 0;\n        indicators.push(\n            <Indicator\n                active={active === i}\n                disabled={disabled}\n            />);\n        forms.push(<PlayerForm filled={i < active} number={i} active={active === i}\n                               onSubmit={(value) => onSubmit(value)}/>)\n    }\n    return <Container>\n        <MoveFromRight>\n            <FormContainer active={active}>\n                {forms}\n            </FormContainer>\n        </MoveFromRight>\n        <IndicatorsWrapper>\n            <Indicators>\n                {indicators}\n            </Indicators>\n        </IndicatorsWrapper>\n    </Container>\n};","import React, {useState, useContext} from 'react';\nimport './App.css';\nimport {Game} from \"./Game\";\nimport {Playground} from \"./component/game/Playground\";\nimport {AppContext, GlobalContext} from \"./context/AppContext\";\nimport {Header} from \"./component/Header\";\nimport {PlayerBar} from \"./component/game/PlayerBar\";\nimport {WelcomeScreen} from \"./component/WelcomeScreen\";\nimport {PlayerCount} from \"./component/settings/PlayerCount\";\nimport {FadeIn} from \"./component/FadeIn\";\nimport {PlayerNames} from \"./component/settings/PlayerNames\";\n\nfunction App() {\n    const [game, setGame] = useState(null);\n    const [welcome, setWelcome] = useState(false);\n    const [collapsed, setCollapsed] = useState(false)\n    const [playerCount, setPlayerCount] = useState(0)\n\n    const finishWelcomeScreen = () => {\n        setCollapsed(true);\n        setTimeout(() => {\n            setWelcome(true)\n        }, 1000)\n    }\n    const initGame = (players) => {\n        setGame(new Game(16, players));\n    }\n\n    return (\n        <GlobalContext>\n            <FadeIn>\n                <Header collapsed={collapsed}/>\n            </FadeIn>\n\n            {!welcome && <>\n                    <WelcomeScreen onFinished={() => {finishWelcomeScreen()}}/>\n                </>}\n            {welcome && playerCount === 0 && <>\n                <PlayerCount onFinished={(playerCount) => setPlayerCount(playerCount)}/>\n                </>}\n            {welcome && playerCount > 0 && !game && <><PlayerNames count={playerCount} onFinished={players => initGame(players)}/></>}\n            {game && game.players &&<>\n                <PlayerBar players={game.players}/>\n                <Playground game={game} />\n            </>}\n        </GlobalContext>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}